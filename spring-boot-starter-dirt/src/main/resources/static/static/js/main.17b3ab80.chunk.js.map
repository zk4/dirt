{"version":3,"sources":["lib/query_builder/item.js","lib/query_builder/comparators.js","lib/query_builder/operators.js","lib/query_builder/functions.js","lib/query_builder/index.js","logic/util.js","logic/network.js","consts/consts.js","components/customRender.js","components/readForm.js","consts/uiConsts.js","components/richEditor.js","components/cascader.js","components/selectInput.js","components/imageUploader.js","components/selectLiveInput.js","components/writeForm.js","components/dirtTable.js","components/tree.js","App.js","index.js"],"names":["Item","Object","classCallCheck","this","constructor","TypeError","concat","name","protoLits","getPrototypeOf","unshift","superProto","shift","missing","find","some","proto","hasOwnProperty","Comparator","selector","comparatorKeyWord","_this","value","arguments","length","undefined","_super","call","Function","String","Number","Like","_super2","Equal","_super3","NotEqual","_super4","Gt","_super5","Ge","_super6","Lt","_super7","Le","_super8","IsNull","_super9","IsNotNull","_super10","IsEmpty","_super11","IsNotEmpty","_super12","In","_len","values","Array","_key","_super13","join","Operator","operatorKeyWord","items","map","item","toString","And","_len2","_key2","apply","Or","_len3","_key3","Not","Exists","functionKeyWord","Absolute","Average","Min","Max","Sum","CurrentDate","CurrentTime","CurrentTimestamp","Size","Length","Trim","Upper","Lower","_super14","Concat","selectors","_super15","SpringFilterQueryBuilder","createClass","key","construct","toConsumableArray","isObj","o","isArray","dot","obj","desc","arr","split","console","log","process","axios","defaults","baseURL","interceptors","response","use","res","status","message","error","statusText","Promise","reject","data","code","reason","_error$response","_error$response$data","_error$response2","_error$response2$data","getOptionsAsync","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","postData","ret","wrap","_context","prev","next","post","sent","abrupt","stop","_x","dot2Object","entries","reduce","p","_ref6","_ref7","slicedToArray","k","v","ks","objectSpread2","defineProperty","network","API_HOST","getTableHeadersAsync","_ref2","_callee2","entityName","_context2","get","_x2","getDataAsync","_ref3","_callee3","id","_context3","_x3","_x4","deleteByIdAsync","_ref4","_callee4","success_cb","_context4","_x5","_x6","_x7","deleteByIdsAsync","_ref5","_callee5","_context5","_x8","_x9","createAsync","_ref8","_callee6","_context6","_x10","_x11","_x12","updateAsync","_ref9","_callee7","_context7","_x13","_x14","_x15","actionAsync","_ref10","_callee8","_context8","_x16","_x17","getDirtFieldTypeAsync","_ref11","_callee9","_context9","_x18","_x19","searchFullAsync","_ref12","_callee10","filter","_context10","_x20","_x21","_x22","searchAsync","_ref13","_callee11","columnKeyMap","params","sort","paramsCpy","filters","filterParams","filterStr","sortQuery","sortParams","pageParam","url","keys","embeddedKeys","embeddedNestKeys","_i","_Object$keys","_args11","_context11","pageNumber","current","assign","_ref14","_ref15","_ref16","_ref17","column","searchType","valueType","SFQB","and","ge","le","Error","like","_ref18","_ref19","equal","arrow","pageSize","c","includes","d","_step","_iterator","createForOfIteratorHelper","s","n","done","err","e","f","resolve","total","page","totalPages","success","_x23","_x24","consts","None","ManyToOne","OneToOne","OneToMany","ManyToMany","Embedded","customRender","table","title","cls","idObj","assert","react_default","a","createElement","components_readForm","readForm","_useState","useState","_useState2","formData","setFormData","_useState3","_useState4","show","setShow","useEffect","readForm_regeneratorRuntime","headers","relation","cls2","idOfEntity","dataIndex","Consts","initialValue","_data$dataIndex","_data$dataIndex2","Fragment","b","index","SchemaForm","readonly","onInit","trigger","href","layoutType","columns","autoFocusFirstInput","submitTimeout","rowProps","gutter","colProps","span","grid","onFinish","uiConsts","password","money","textarea","date","dateTime","dateWeek","dateMonth","dateQuarter","dateYear","dateRange","dateTimeRange","time","timeRange","text","richtext","select","selectInputMultipal","selectLiveInput","selectInput","treeSelect","entitySelect","checkbox","rate","radio","radioButton","progress","percent","digit","longlat","second","avatar","switch","fromNow","image","jsonCode","color","cascader","imageUploader","group","formList","slide","richEditor","WriteView","props","setValue","innerChange","useCallback","onChange","lib_default","onBlur","theme","TableRowView","dangerouslySetInnerHTML","__html","SearchView","ReadView","subTreeName","onValueSet","options","setOptions","request","cascader_regeneratorRuntime","ds","childAlias","JSON","parse","stringify","replaceAll","loadData","selectedOptions","targetOption","loading","children","valueArrays","optionArrays","changeOnSelect","components_cascader","_props$value","accept","urls","fileList","setFileList","onPreview","imageUploader_regeneratorRuntime","file","src","imgWindow","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","window","open","document","write","outerHTML","antd_img_crop_esm","rotate","readOnly","upload","action","listType","newFileList","uploadedUrls","_f$response","_f$response$data","urlsstr","es_image","PreviewGroup","style","paddingRight","width","i","push","label","fuc","size","splice","handleChange","es_select","mode","allowClear","tokenSeparators","placeholder","DebounceSelect","fetchOptions","_ref$debounceTimeout","debounceTimeout","objectWithoutProperties","_excluded","fetching","setFetching","_useState5","_useState6","setLoading","fetchRef","useRef","debounceFetcher","useMemo","debounce","fetchId","then","newOptions","labelInValue","showArrow","onFocus","filterOption","onSearch","notFoundContent","spin","_useState7","_useState8","func","WriteForm","triggerCompoent","isModalOpen","setIsModalOpen","createColumns","columnKey","dependColumn","UIConsts","form","type","defaultRender","formItemProps","fieldProps","writeForm_excluded","writeForm_regeneratorRuntime","username","arg","getFieldValue","subKey","args","_e$","setFieldValue","_excluded2","valueEnum","_excluded3","_excluded4","_valueArrays$slice","slice","xs","md","_excluded5","vaule","_excluded6","_excluded7","vals","input","Group","compact","target","es_button","onClick","SearchOutlined","modal","destroyOnClose","height","onOk","onCancel","DirtTable","rowSelection","getCheckboxProps","record","defaultSelectedRowKeys","selectedRowKeys","selectedRows","info","ids","wrapperOnFinish","actionRef","formRef","RangePicker","DatePicker","onSelected","setColumns","setColumnKeyMap","redefineHeader","renderFormItem","dirtTable_excluded","dirtTable_regeneratorRuntime","dirtTable_excluded2","_e$2","showTime","time_picker","_record$dataIndex","r","rid","generateAction","maps","searchAsyncWrapper","_args6","generateCreateForm","submitTypes","submitType","writeForm","reload","PlusOutlined","submitable","tooltip","isDetailed","postdata","popconfirm","onConfirm","className","argColumnsMap","doAction","actionName","Table","scroll","x","cardBordered","editable","columnsState","persistenceKey","persistenceType","rowKey","search","labelWidth","setting","listsHeight","syncToUrl","pagination","dateFormatter","headerTitle","toolBarRender","tableAlertRender","onCleanSelected","space","marginInlineStart","CarryOutOutlined","FormOutlined","App","tables","setTables","qs","location","ignoreQueryPrefix","setTitle","viewType","App_regeneratorRuntime","_data$data","_data$data$entityName","_Object$entries","_Object$entries$","_Object$entries$$","_Object$entries2","_Object$entries2$","t0","t","marginBottom","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.17b3ab80.chunk.js","sourcesContent":["class Item { //Abstract\n\tconstructor() {\n\t\tconst mustOverwriteMethods = [ \"toString\" ];\n\t\tif (new.target === Item) {\n\t\t\tthrow new TypeError(`Cannot construct ${new.target.name} instances directly`);\n\t\t}\n\t\tlet protoLits = [ Object.getPrototypeOf(this) ];\n\t\twhile(Object.getPrototypeOf(protoLits[0]).constructor.name !== \"Object\") { protoLits.unshift(Object.getPrototypeOf(protoLits[0])); }\n\t\tconst superProto = protoLits.shift();\n\t\tlet missing = mustOverwriteMethods.find(name => typeof superProto[name] === \"function\" && !protoLits.some(proto => proto.hasOwnProperty(name)));\n\t\tif (missing) {\n\t\t\tthrow new TypeError(`${this.constructor.name} need to overwrite ${missing}`);\n\t\t}\n\t}\n}\n\nexport { Item };","import { Item } from './item.js';\n\nclass Comparator extends Item { //Abstract\n\tconstructor(selector, comparatorKeyWord, value = undefined) {\n\t\tsuper();\n\t\tif (new.target === Comparator) {\n\t\t\tthrow new TypeError(`Cannot construct ${new.target.name} instances directly`);\n\t\t}\n\t\tif (!(selector instanceof Function || (typeof selector === 'string' || selector instanceof String))) {\n\t\t\tthrow new TypeError(`${new.target.name} parameter 'selector' must be a Function or a String!`);\n\t\t}\n\t\tif (value) {\n\t\t\tif (!(typeof value === 'string' || value instanceof String || typeof value === 'number' || value instanceof Number)) {\n\t\t\t\tthrow new TypeError(`${new.target.name} parameter 'value' must be a String or a Number!`);\n\t\t\t}\n\t\t}\n\t\tthis.selector = selector;\n\t\tthis.comparatorKeyWord = comparatorKeyWord;\n\t\tthis.value = value;\n\t}\n\n\ttoString() {\n\t\tif (this.value !== undefined) {\n\t\t\tif (typeof this.value === 'number' || this.value instanceof Number) {\n\t\t\t\treturn `${this.selector} ${this.comparatorKeyWord} ${this.value}`;\n\t\t\t} else {\n\t\t\t\treturn `${this.selector} ${this.comparatorKeyWord} '${this.value}'`;\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${this.selector} ${this.comparatorKeyWord}`;\n\t\t}\n\t}\n}\n\nclass Like extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"~\", value);\n\t}\n}\n\nclass Equal extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \":\", value);\n\t}\n}\n\nclass NotEqual extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"!\", value);\n\t}\n}\n\nclass Gt extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \">\", value);\n\t}\n}\n\nclass Ge extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \">:\", value);\n\t}\n}\n\nclass Lt extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"<\", value);\n\t}\n}\nclass Le extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"<:\", value);\n\t}\n}\n\nclass IsNull extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS NULL\");\n\t}\n}\n\nclass IsNotNull extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS NOT NULL\");\n\t}\n}\n\nclass IsEmpty extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS EMPTY\");\n\t}\n}\n\nclass IsNotEmpty extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS NOT EMPTY\");\n\t}\n}\n\nclass In extends Comparator {\n\tconstructor(selector, ...values) {\n\t\tsuper(selector, \"IN\", \"('\" + values.join(\"', '\") + \"')\");\n\t}\n\n\ttoString() {\n\t\treturn `${this.selector} ${this.comparatorKeyWord} ${this.value}`;\n\t}\n\n}\n\nexport { Comparator, Like, Equal, NotEqual, Gt, Ge, Lt, Le, IsNull, IsNotNull, IsEmpty, IsNotEmpty, In };","import { Item } from './item.js';\nimport { Comparator } from './comparators.js';\n\nclass Operator extends Item { //Abstract\n\tconstructor(operatorKeyWord, ...items) {\n\t\tsuper();\n\t\tif (new.target === Operator) {\n\t\t\tthrow new TypeError(\"Cannot construct \" + new.target.name + \" instances directly\");\n\t\t}\n\t\tthis.operatorKeyWord = operatorKeyWord;\n\t\tthis.items = items;\n\t}\n\n\ttoString() {\n\t\treturn  \"(\" + this.items.map(item => item.toString()).join(` ${this.operatorKeyWord} `) + \")\";\n\t}\n}\n\nclass And extends Operator {\n\tconstructor(...items) {\n\t\tsuper(\"AND\", ...items);\n\t}\n}\n\nclass Or extends Operator {\n\tconstructor(...items) {\n\t\tsuper(\"OR\", ...items);\n\t}\n}\n\nclass Not extends Operator {\n\tconstructor(item) {\n\t\tif (!(item instanceof Operator || item instanceof Comparator)) {\n\t\t\tthrow new TypeError(`${new.target.name} parameter 'item' must be a Operator or a Comparator!`);\n\t\t}\n\t\tsuper(\"NOT\", item);\n\t}\n}\n\nclass Exists extends Operator {\n\tconstructor(item) {\n\t\tif (!(item instanceof Operator || item instanceof Comparator)) {\n\t\t\tthrow new TypeError(`${new.target.name} parameter 'item' must be a Operator or a Comparator!`);\n\t\t}\n\t\tsuper(\"EXISTS\", item);\n\t}\n}\n\nexport { Operator, And, Or, Not, Exists };","import { Item } from './item.js';\nimport { Comparator } from './comparators.js';\n\nclass Function extends Item { //Abstract\n\tconstructor(functionKeyWord, selector) {\n\t\tif (new.target === Comparator) {\n\t\t\tthrow new TypeError(\"Cannot construct \" + new.target.name + \" instances directly\");\n\t\t}\n\t\tif (!(typeof selector === 'string' || selector instanceof String)) {\n\t\t\tthrow new TypeError(new.target.name + \" parameter 'selector' must be a String!\");\n\t\t}\n\t\tsuper();\n\t\tthis.selector = selector;\n\t\tthis.functionKeyWord = functionKeyWord;\n\t}\n\n\ttoString() {\n\t\tif (this.selector !== undefined) {\n\t\t\treturn this.functionKeyWord + \"(\" + this.selector + \")\";\n\t\t} else {\n\t\t\treturn this.functionKeyWord + \"()\";\n\n\t\t}\n\t}\n}\n\nclass Absolute extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"ABSOLUTE\", selector);\n\t}\n}\n\nclass Average extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"AVERAGE\", selector);\n\t}\n}\n\nclass Min extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"MIN\", selector);\n\t}\n}\n\nclass Max extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"MAX\", selector);\n\t}\n}\n\nclass Sum extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"SUM\", selector);\n\t}\n}\n\nclass CurrentDate extends Function {\n\tconstructor() {\n\t\tsuper(\"CURRENTDATE\");\n\t}\n}\n\nclass CurrentTime extends Function {\n\tconstructor() {\n\t\tsuper(\"CURRENTTIME\");\n\t}\n}\n\nclass CurrentTimestamp extends Function {\n\tconstructor() {\n\t\tsuper(\"CURRENTTIMESSTAMP\");\n\t}\n}\n\nclass Size extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"SIZE\", selector);\n\t}\n}\n\nclass Length extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"LENGTH\", selector);\n\t}\n}\n\nclass Trim extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"TRIM\", selector);\n\t}\n}\n\nclass Upper extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"UPPER\", selector);\n\t}\n}\n\nclass Lower extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"LOWER\", selector);\n\t}\n}\n\nclass Concat extends Function {\n\tconstructor(...selectors) {\n\t\tsuper(\"CONCAT\", \"('\" + selectors.join(\", \") + \"')\");\n\t}\n}\n\nexport { Function, Absolute, Average, Min, Max, Sum, CurrentDate, CurrentTime, CurrentTimestamp, Size, Length, Trim, Upper, Lower, Concat };","import { Like, Equal, NotEqual, Gt, Ge, Lt, Le, IsNull, IsNotNull, IsEmpty, IsNotEmpty, In } from './comparators.js';\nimport { And, Or, Not, Exists } from './operators.js';\nimport { Absolute, Average, Min, Max, Sum, CurrentDate, CurrentTime, CurrentTimestamp, Size, Length, Trim, Upper, Lower, Concat } from './functions.js';\n\nexport class SpringFilterQueryBuilder {\n\tstatic and(...items) {\n\t\treturn new And(...items);\n\t}\n\n\tstatic or(...items) {\n\t\treturn new Or(...items);\n\t}\n\n\tstatic not(item) {\n\t\treturn new Not(item);\n\t}\n\n\tstatic exists(item) {\n\t\treturn new Exists(...item);\n\t}\n\n\tstatic like(selector, value) {\n\t\treturn new Like(selector, value);\n\t}\n\n\tstatic equal(selector, value) {\n\t\treturn new Equal(selector, value);\n\t}\n\n\tstatic notEqual(selector, value) {\n\t\treturn new NotEqual(selector, value);\n\t}\n\n\tstatic gt(selector, value) {\n\t\treturn new Gt(selector, value);\n\t}\n\n\tstatic ge(selector, value) {\n\t\treturn new Ge(selector, value);\n\t}\n\n\tstatic lt(selector, value) {\n\t\treturn new Lt(selector, value);\n\t}\n\n\tstatic le(selector, value) {\n\t\treturn new Le(selector, value);\n\t}\n\n\tstatic isNull(selector, value) {\n\t\treturn new IsNull(selector, value);\n\t}\n\n\tstatic isNotNull(selector, value) {\n\t\treturn new IsNotNull(selector, value);\n\t}\n\n\tstatic isEmpty(selector, value) {\n\t\treturn new IsEmpty(selector, value);\n\t}\n\n\tstatic isNotEmpty(selector, value) {\n\t\treturn new IsNotEmpty(selector, value);\n\t}\n\n\tstatic in(selector, ...value) {\n\t\treturn new In(selector, ...value);\n\t}\n\n\tstatic absolute(selector) {\n\t\treturn new Absolute(selector);\n\t}\n\n\tstatic average(selector) {\n\t\treturn new Average(selector);\n\t}\n\n\tstatic min(selector) {\n\t\treturn new Min(selector);\n\t}\n\n\tstatic max(selector) {\n\t\treturn new Max(selector);\n\t}\n\n\tstatic sum(selector) {\n\t\treturn new Sum(selector);\n\t}\n\n\tstatic currentDate(selector) {\n\t\treturn new CurrentDate(selector);\n\t}\n\n\tstatic currentTime(selector) {\n\t\treturn new CurrentTime(selector);\n\t}\n\n\tstatic currentTimestamp(selector) {\n\t\treturn new CurrentTimestamp(selector);\n\t}\n\n\tstatic size(selector) {\n\t\treturn new Size(selector);\n\t}\n\n\tstatic length(selector) {\n\t\treturn new Length(selector);\n\t}\n\n\tstatic trim(selector) {\n\t\treturn new Trim(selector);\n\t}\n\n\tstatic upper(selector) {\n\t\treturn new Upper(selector);\n\t}\n\n\tstatic lower(selector) {\n\t\treturn new Lower(selector);\n\t}\n\n\tstatic concat(selector) {\n\t\treturn new Concat(selector);\n\t}\n}","\nfunction isObj(o) {\n  return typeof o === 'object' &&\n    !Array.isArray(o) &&\n    o !== null\n}\n\nfunction dot(obj, desc) {\n    var arr = desc.split(\".\");\n    while(arr.length && (obj = obj[arr.shift()]));\n    return obj;\n}\nexport {\n  isObj,\n  dot\n}\n","import axios from 'axios';\nimport {message} from 'antd';\nimport {SpringFilterQueryBuilder as SFQB} from '../lib/query_builder';\nimport {isObj, dot} from './util'\n\n\n// respone拦截器\nconsole.log(process.env.DIRT_API)\n\nconst API_HOST = process.env.DIRT_API || '';\n\naxios.defaults.baseURL = API_HOST+'/dirt/';\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (res) {\n  if (res.status != 200) {\n    message.error(res.statusText);\n    return Promise.reject(res.statusText);\n  }\n  // compatiable with  wrapper response \n  if (isObj(res) && 'data' in res && isObj(res.data) && 'code' in res.data) {\n    if (res.data.code === 0) {\n      // message.success('成功');\n      return res.data;\n    } else {\n      let reason = \"\"\n      if ('data' in res.data) {\n        reason = Array.isArray(res.data.data) ? res.data.data.join(\";\") : res.data.data;\n      } else if ('message' in res.data) {\n        reason = res.data.message\n      }\n      message.error(reason);\n      return Promise.reject(reason);\n    }\n\n  } else {\n    return res;\n  }\n}, function (error) {\n  message.error(error?.response?.data?.error);\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error?.response?.data?.error);\n});\nconst getOptionsAsync = async (postData) => {\n  let ret = await axios.post(`getOptions`, postData || {})\n  // success_cb && success_cb()\n  return ret.data;\n}\nconst getEntitySchemaAsync = async (entityName) => {\n  if(!entityName){\n    message.error(\"请选择实体\");\n    return []\n  }\n  const ret = await axios.get(`getEntitySchema?entityName=${entityName}`)\n  return ret.data;\n}\n\nconst getDataAsync = async (entityName, id) => {\n  if(!entityName){\n    message.error(\"请选择实体\");\n    return []\n  }\n\n  const ret = await axios.get(`getData?entityName=${entityName}&id=${id}`)\n  return ret.data;\n}\n\nconst deleteByIdAsync = async (entityName, id, success_cb) => {\n  let ret = await axios.post(`deleteById`, {entityName, id})\n  success_cb && success_cb()\n  return ret.data;\n}\nconst deleteByIdsAsync = async (postData, success_cb) => {\n  const ret = axios.post('deleteByIds', postData)\n  success_cb && success_cb();\n  return ret.data;\n}\n\nconst dot2Object = (values) => {\n\n  let newV = Object.entries(values).reduce((p, [k, v]) => {\n    let ks = k.split(\".\")\n    if (ks.length > 1)\n      p[ks[0]] = {[ks[1]]: v, ...p[ks[0]]}\n    else\n      p[k] = v\n\n    return p\n  }, {})\n  return newV;\n}\n\nconst createAsync = async (entityName, values, success_cb) => {\n  // 转换 {a.b:1,a.d:2,e:3} ==> {a:{b:1,d:2},e:3}\n  // 主要用在 embeded 处理中\n  // embeded value 会带有. \n  // 如 loation.lontitude   loation.lontitude\n\n  const ret = await axios.post(`create?entityName=${entityName}`, dot2Object(values))\n  success_cb && success_cb();\n  return ret.data;\n}\nconst updateAsync = async (entityName, postData, success_cb) => {\n  const ret = await axios.post(`update?entityName=${entityName}`, dot2Object(postData))\n  success_cb && success_cb();\n  return ret.data;\n}\nconst actionAsync = async (postData, success_cb) => {\n  const ret = await axios.post(`action`, postData)\n  success_cb && success_cb();\n  return ret.data;\n}\n\nconst getDirtFieldTypeAsync = async (postData, success_cb) => {\n  const ret = await axios.post(`getDirtFieldType`, postData)\n  success_cb && success_cb();\n  return ret.data;\n}\nconst getFullDataslAsync = async (entityName, filter, success_cb) => {\n  const ret = await axios.post(`getFullDatas?entityName=${entityName}`, {filter})\n  success_cb && success_cb();\n  return ret.data;\n}\nconst getDatasAsync = async (entityName, columnKeyMap, params = {}, sort, filter, success_cb) => {\n  if(!entityName){\n    message.error(\"请选择实体\");\n    return []\n  }\n\n\n  // 映射 current 到 pageNumber\n  params.pageNumber = params.current;\n  delete params[\"current\"];\n\n  // 制作 JPA filters\n  let paramsCpy = Object.assign({}, params)\n  delete paramsCpy[\"pageNumber\"];\n  delete paramsCpy[\"pageSize\"];\n\n\n  const filters = Object.entries(params)\n    .filter(([key, value]) => {\n      return key !== 'pageNumber' && key !== 'pageSize' && value\n    })\n\n    // 处理 eFilterOperator \n    .map(([key, value]) => {\n      if (Array.isArray(value)) {\n        let column = columnKeyMap[key];\n        if (column.searchType.valueType === \"dateTimeRange\"\n          || column.searchType.valueType === \"dateRange\"\n          || column.searchType.valueType === \"timeRange\"\n        ) {\n          return SFQB.and(SFQB.ge(key, value[0]), SFQB.le(key, value[1]));\n        } else {\n          throw new Error(\"未实现\");\n        }\n      } else if (typeof (value) == 'string') {\n        if (value.length > 0)\n          return SFQB.like(key, `${value}`);\n        return null;\n      } else {\n        if (isObj(value)) {\n          // convert key {a:1,b:1} ==>  \"key.a : 1 AND key.b : 2\"\n          return Object.entries(value).map(([k, v]) => SFQB.equal(key + '.' + k, v))\n        }\n        else {\n          return SFQB.equal(key, `${value}`);\n        }\n      }\n    })\n\n  // 手动组装spring-filter \n  let filterParams = \"\"\n  //  全部组装成 and 条件，在 table　里没有例外\n  let filterStr = SFQB.and(...filters).toString();\n  //  复合spring-filter 标准\n  if (filterStr !== \"()\") {filterParams = {filter: filterStr}}\n\n\n  // 制作 JPA page 里的sort\n  let sortQuery = Object.entries(sort)\n    .map(v => {\n      let arrow = \"desc\"\n      if (v[1] === \"ascend\")\n        arrow = \"asc\"\n      return v[0] + \",\" + arrow\n    })\n    .join('&')\n  let sortParams = \"\"\n  if (sortQuery.length)\n    sortParams = `&sort=${sortQuery}`;\n\n  // params.pageNumber-1 从 0 页开始\n  const pageParam = `&size=${params.pageSize}&page=${params.pageNumber - 1}`\n\n  let url = `getDatas?entityName=${entityName}${pageParam}${sortParams}`;\n\n  // 要符合 ProTalbe 的数据格式\n  let ret = await axios.post(url, {...filterParams});\n  // rebuilding  ret.data for embedded .  ------------------------------------start\n  // Ex: location.lontitude  => location: {longitude}\n  let keys = Object.keys(columnKeyMap)\n  const embeddedKeys = keys.filter(c => c.includes(\".\"))\n\n  ret.data = ret.data.map(d => {\n    for (const k of embeddedKeys) {\n      const v = dot(d, k)\n      d[k] = v;\n    }\n    return d;\n  })\n\n  let embeddedNestKeys = embeddedKeys.reduce((p, k) => {\n    let ks = k.split(\".\")\n    if (ks.length > 1)\n      p[ks[0]] = {[ks[1]]: null, ...p[ks[0]]}\n    else\n      p[k] = null\n\n    return p\n  }, {})\n\n  // 删除嵌套的 key\n  for (const k of Object.keys(embeddedNestKeys)) {\n    delete ret.data[k]\n  }\n  // rebuilding  ret.data for embedded .  ------------------------------------end\n  return new Promise(\n    (resolve, reject) => {\n      resolve({\n        data: ret.data,\n        total: ret.page.totalPages * ret.page.pageSize,\n        success: true\n      });\n\n    }\n  );\n}\nexport default {\n  API_HOST,\n  getTableHeadersAsync: getEntitySchemaAsync,\n  getDataAsync,\n  deleteByIdAsync,\n  deleteByIdsAsync,\n  createAsync,\n  updateAsync,\n  getOptionsAsync,\n  actionAsync,\n  getDirtFieldTypeAsync,\n  searchFullAsync: getFullDataslAsync,\n  searchAsync: getDatasAsync\n}\n\n\n\n","export default {\n  None: \"None\",\n  ManyToOne: \"ManyToOne\",\n  OneToOne: \"OneToOne\",\n  OneToMany: \"OneToMany\",\n  ManyToMany: \"ManyToMany\",\n  Embedded: \"Embedded\",\n}\n","import React from 'react';\nimport ReadForm from './readForm'\nimport {isObj} from '../logic/util'\nexport default {\n  table: (title, cls, idObj) => {\n    if(idObj==null) \n    {\n      return\n    }\n    if (isObj(idObj)) {\n      console.assert(idObj.id,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj.id} title={title} id={idObj.id} cls={cls} name={idObj?.name} />\n    }\n    else {\n      console.assert(idObj,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj} title={title} id={idObj} cls={cls}/>\n    }\n  },\n  readForm: (title, cls, idObj) => {\n    if(idObj==null) \n    {\n      return\n    }\n    if (isObj(idObj))\n    {\n      console.assert(idObj.id,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj.id} title={title} id={idObj.id} cls={cls} name={idObj?.name} />\n      }\n    else\n    {\n      console.assert(idObj,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj} title={title} id={idObj} cls={cls} />\n      }\n  }\n}\n\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport {BetaSchemaForm, } from '@ant-design/pro-components';\nimport network from '../logic/network'\nimport Consts from \"../consts/consts\"\nimport customRender from './customRender'\nimport {isObj} from '../logic/util';\n\nexport default function ({title, cls, id, name}) {\n  let [formData, setFormData] = useState([])\n  // 如果没有 name，则使用 id\n  if (name == null) name = id\n  const [show, setShow] = useState(false);\n\n  useEffect(\n    () => {\n      show && (async () => {\n        let headers = await network.getTableHeadersAsync(cls)\n        let data = await network.getDataAsync(cls, id)\n        headers = headers.map(d => {\n          const {relation, idOfEntity: cls2, id, title, dataIndex} = d;\n          if (relation === Consts.None) {\n            d.initialValue = data[d.key];\n          }\n          // 有 relation，要做嵌套显示处理\n          else if (relation === Consts.OneToOne || relation === Consts.ManyToOne) {\n            d.initialValue = customRender.readForm(title, cls2, data[dataIndex]?.id);\n          }\n          else if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n            d.initialValue = <>\n              {\n                data[dataIndex]?.map(c => {return customRender.readForm(title, cls2, c)})\n              }\n            </>\n          } else {\n            // why here ????\n            debugger\n          }\n\n          return d;\n        }).sort((a, b) => a.index - b.index);\n        setFormData(headers)\n      })()\n    }\n    , [show, cls, id])\n\n  return <BetaSchemaForm\n    title={title + \":\" + id}\n    readonly={true}\n    onInit={e => setShow(true)}\n    trigger={<a href=\"#/\"> {name} </a>}\n    layoutType='ModalForm'\n    columns={formData}\n    autoFocusFirstInput\n    submitTimeout={4000}\n    rowProps={{gutter: [16, 16]}}\n    colProps={{span: 12, }}\n    grid={true}\n    onFinish={v => {setShow(false);}} >\n  </BetaSchemaForm>\n}\n","export default {\n  //密码输入框\n  password: \"password\",\n  //金额输入框\n  money: \"money\",\n  //文本域\n  textarea: \"textarea\",\n  //日期\n  date: \"date\",\n  //日期时间\n  dateTime: \"dateTime\",\n  //周\n  dateWeek: \"dateWeek\",\n  //月\n  dateMonth: \"dateMonth\",\n  //季度输入\n  dateQuarter: \"dateQuarter\",\n  //年份输入\n  dateYear: \"dateYear\",\n  //日期区间\n  dateRange: \"dateRange\",\n  //日期时间区间\n  dateTimeRange: \"dateTimeRange\",\n  //时间\n  time: \"time\",\n  //时间区间\n  timeRange: \"timeRange\",\n  //文本框\n  text: \"text\",\n  //富文本\n  richtext: \"richtext\",\n  //下拉框\n  select: \"select\",\n  selectInputMultipal:\"selectInputMultipal\",\n  selectLiveInput:\"selectLiveInput\",\n  //可下拉，可输入\n  selectInput:\"selectInput\",\n  //树形下拉框\n  treeSelect: \"treeSelect\",\n\n  entitySelect: \"entitySelect\",\n  // 多选框\n  checkbox: \"checkbox\",\n  //星级组件\n  rate: \"rate\",\n  // 地图\n  map: \"map\",\n  //单选框\n  radio: \"radio\",\n  //按钮单选框\n  radioButton: \"radioButton\",\n  //进度条\n  progress: \"progress\",\n  //百分比组件\n  percent: \"percent\",\n  //数字输入框\n  digit: \"digit\",\n  // 经纬度\n  longlat: \"longlat\",\n  //秒格式化\n  second: \"second\",\n  //头像\n  avatar: \"avatar\",\n  //代码框\n  code: \"code\",\n  //开关 switch, switch 是关键字\n  \"switch\": \"switch\",\n  //相对于当前时间\n  fromNow: \"fromNow\",\n  //图片\n  image: \"image\",\n  //代码框，但是带了 json 格式化\n  jsonCode: \"jsonCode\",\n  //颜色选择器\n  color: \"color\",\n  //级联选择器\n  cascader: \"cascader\",\n\n  // 图片上传\n  imageUploader: \"imageUploader\",\n\n  group: \"group\",\n  formList: \"formList\",\n  slide: \"slide\"\n}\n","import React, {useState, useCallback} from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n//TODO: 回车才设值，测试先这样吧 \nfunction WriteView(props) {\n  const [value, setValue] = useState(props.value || '');\n  let innerChange = useCallback((value) => {\n    setValue(value);\n    props.onChange && props.onChange(value);\n  }, [props.onChange])\n  return <ReactQuill onBlur={e => {\n  }} theme=\"snow\" value={value} onChange={v => innerChange(v)} />;\n}\n\nfunction TableRowView(props) {\n  return <div dangerouslySetInnerHTML={{__html: props.value}} />;\n}\nexport default {\n  WriteView,\n  TableRowView,\n  SearchView: null,\n  ReadView: null,\n}\n","import {Cascader} from 'antd';\nimport React, {useState, useEffect} from 'react';\nimport network from '../logic/network'\n\nconst dataAdapter = (ds, childAlias) => {\n  if (ds) {\n    var obj = JSON.parse(JSON.stringify(ds)\n      .replaceAll(\"\\\"name\\\":\", \"\\\"label\\\":\")\n      .replaceAll(\"\\\"id\\\":\", \"\\\"value\\\":\")\n      .replaceAll(\"\\\"\" + childAlias + \"\\\":\", \"\\\"children\\\":\")\n    );\n    return obj;\n  }\n  return ds;\n}\nconst SearchView = (props) => {\n  const {idOfEntity, subTreeName,onValueSet} = props;\n  const [options, setOptions] = useState([]);\n\n  const request = async (id) => {\n    let data = []\n    if (id == null) {\n      data = await network.searchFullAsync(idOfEntity, \"(name : 'root')\");\n      data = data[0]\n    } else {\n      data = await network.getDataAsync(idOfEntity, id);\n    }\n    return data ? dataAdapter(data[subTreeName], subTreeName) : []\n  }\n  useEffect(() => {\n    (async () => {\n      let d = await request(null)\n      setOptions(d)\n    })()\n  }, [])\n\n  const onChange = (valueArrays, optionArrays) => {\n    onValueSet(valueArrays, optionArrays)\n  };\n\n  const loadData = async (selectedOptions) => {\n    const targetOption = selectedOptions[selectedOptions.length - 1];\n    targetOption.loading = true; // load options lazily\n    let id = targetOption.value\n    let d = await request(id)\n    targetOption.children = d;\n    targetOption.loading = false;\n    setOptions([...options]);\n  };\n\n  return <Cascader options={options} loadData={loadData} onChange={onChange} changeOnSelect />;\n};\n\n// export default App;\nexport default {\n  WriteView: SearchView,\n  TableRowView: null,\n  SearchView,\n  ReadView: null,\n}\n\n","import {Select,SelectProps,message} from 'antd';\nimport React, {useState, useEffect,useCallback} from 'react';\nimport network from '../logic/network'\n\nconst options = [];\nfor (let i = 10; i < 36; i++) {\n  options.push({\n    value: i.toString(36) + i,\n    label: i.toString(36) + i,\n  });\n}\nconst handleChange = (value) => {\n  console.log(`selected ${value}`);\n};\nconst SearchView = (props) => {\n\n  const [value, setValue] = useState([]);\n  \n  let fuc= useCallback((e)=>{\n    let a = e;\n    // debugger\n    if(props.size){\n      if(props.size < e.length)\n      {\n        // message.error('超出可输大小');\n        a = a.splice(a.length-props.size,props.size)\n      }\n    }\n      setValue(a)\n      props.handleChange(a)\n  })\n  return ( <Select\n    mode=\"tags\"\n    style={{\n      width: '100%',\n    }}\n    value={value}\n    allowClear={true}\n    tokenSeparators={[',']}\n    placeholder={props.placeholder}\n    onChange={fuc}\n    options={props.options}\n  />)\n};\n\n// export default App;\nexport default {\n  WriteView: SearchView,\n  TableRowView: null,\n  SearchView,\n  ReadView: null,\n}\n\n","import React, {useState} from 'react';\nimport {Upload, Image} from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport network from '../logic/network'\n\nfunction WriteView(props) {\n  let accept = props.accept;\n  let urls = (props?.value?.split(\",\").map(url =>{ return  { status: 'done', url, } }))\n  const [fileList, setFileList] = useState(urls?urls:[]);\n\n  const onChange = ({fileList: newFileList}) => {\n    // const oldDoneUrls = newFileList.filter(f => f.status === 'done').map(f => f.url)\n    const uploadedUrls = newFileList.filter(f => f?.response?.code === 0 || f.status === 'done').map(f => f.url || f.response.data?.[0].url)\n    if(uploadedUrls.length == newFileList.length)\n    {\n      const urlsstr=  uploadedUrls.join(\",\")\n      console.log(urlsstr)\n      props.onChange(urlsstr)\n    }\n\n    setFileList(newFileList);\n  };\n\n  const onPreview = async (file) => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    const a = imgWindow?.document.write(image.outerHTML);\n  };\n\n  return (\n    <ImgCrop rotate readOnly>\n      <Upload\n        accept = {accept}\n        action={network.API_HOST +\"/dirt/upload\"}\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}\n      >\n        {fileList.length < 5 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};\n\n\nconst contentStyle = {\n  height: '160px',\n  color: '#fff',\n  lineHeight: '160px',\n  textAlign: 'center',\n  background: '#364d79',\n};\n\nconst TableRowView = ({value}) => {\n  return value !== null ?\n    <Image.PreviewGroup>\n      {\n        value.split(\",\").map((url) => {\n          return <Image style={{'paddingRight':'2px'}} width={50} src={url} key={url} />\n        })\n      }\n    </Image.PreviewGroup>\n    : null\n\n};\nexport default {\n  WriteView,\n  TableRowView,\n  SearchView: null,\n  ReadView: null,\n}\n","import { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport React, { useMemo, useRef, useState,useCallback } from 'react';\nfunction DebounceSelect({ fetchOptions, debounceTimeout = 100, ...props }) {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  \n  const fetchRef = useRef(0);\n  const debounceFetcher = useMemo(() => {\n    setOptions([])\n    const loadOptions = (value) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      // setOptions([]);\n      setFetching(true);\n      setLoading(true)\n      fetchOptions(value).then((newOptions) => {\n        setLoading(false)\n        if (fetchId !== fetchRef.current) {\n          // for fetch callback order\n          return;\n        }\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n  return (\n    <Select\n      labelInValue\n      showArrow\n      loading={loading}\n      onFocus={debounceFetcher}\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n      {...props}\n      options={options}\n    />\n  );\n}\n\n// Usage of DebounceSelect\n\nconst SearchView = (props) => {\n  const [value, setValue] = useState(props.value || []);\n  let func= useCallback((e)=>{\n  let a = e;\n  // debugger\n  if(props.size){\n    if(props.size < e.length)\n    {\n      // message.error('超出可输大小');\n      a = a.splice(a.length-props.size,props.size)\n    }\n  }\n    setValue(a)\n    props.onChange(a)\n})\n\n  return (\n    <DebounceSelect\n      mode=\"tags\"\n      value={value}\n      placeholder=\"Select users\"\n      fetchOptions={props.fetchOptions}\n      onChange={func}\n      style={{\n        width: '100%',\n      }}\n    />\n  );\n};\n// export default App;\nexport default {\n  WriteView: SearchView,\n  TableRowView: null,\n  SearchView,\n  ReadView: null,\n}\n\n","import React, {useState, useRef, useEffect, useCallback} from 'react';\nimport {BetaSchemaForm} from '@ant-design/pro-components';\nimport DirtTable from './dirtTable'\nimport {Modal, Input, Button} from 'antd';\nimport Consts from '../consts/consts'\nimport UIConsts from '../consts/uiConsts'\nimport customRender from './customRender'\nimport RichText from './richEditor'\nimport Cascader from './cascader'\n// import Map from './amap'\nimport ImageUploader from './imageUploader'\nimport SelectInput from './selectInput'\nimport SelectLiveInput from './selectLiveInput'\nimport network from '../logic/network'\nimport {SearchOutlined} from '@ant-design/icons';\n\nlet WriteForm = (props) => {\n  const {entityName, name, triggerCompoent, columns, onFinish, onInit} = props;\n  // debugger\n  // 有可能有多个 modal 需要保持状态，使用{}\n  const [isModalOpen, setIsModalOpen] = useState({});\n  const [fieldName, setFieldName] = useState(\"\");\n\n\n  const showModal = (name) => {\n    setIsModalOpen(s => {return {...s, [name]: true}});\n  };\n  const handleOk = (name) => {\n    setIsModalOpen(s => {return {...s, [name]: false}});\n  };\n  const handleCancel = (name) => {\n    setIsModalOpen(s => {return {...s, [name]: false}});\n  };\n\n  let createColumns = columns.map(column => {\n    const {key: columnKey, idOfEntity, relation, dependColumn} = column\n    // 自定义创建 formItem\n    // if (column.valueType === UIConsts.map) {\n    //   column[\"colProps\"] = {xs: 24, md: 24}\n    //   column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n    //     return <Map.WriteView />\n    //   }\n    // }\n    if (column.valueType === UIConsts.selectLiveInput) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        return <SelectLiveInput.WriteView\n          size={1}\n          fetchOptions={\n            async (username) => {\n              const arg = form.getFieldValue(dependColumn)\n              return network.getOptionsAsync({entityName, subKey: columnKey, args: {[dependColumn]: arg}});\n            }\n          }\n          onChange={\n            (e) => {\n              form.setFieldValue(columnKey, e?.[0]?.value)\n            }\n          }\n        />\n      }\n    }\n\n    if (column.valueType === UIConsts.selectInput) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        let options = Object.entries(item.valueEnum).map(([k, v]) => {return {label: v.text, value: v.text}})\n        return <SelectInput.WriteView options={options} size={1} handleChange={e => {\n          form.setFieldValue(columnKey, e[0])\n        }} />\n      }\n    }\n    if (column.valueType === UIConsts.selectInputMultipal) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        let options = Object.entries(item.valueEnum).map(([k, v]) => {return {label: v.text, value: v.text}})\n        return <SelectInput.WriteView options={options} handleChange={e => {\n          form.setFieldValue(columnKey, e)\n        }} />\n      }\n    }\n    if (column.valueType === UIConsts.cascader) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        // debugger\n        return <Cascader.WriteView idOfEntity={idOfEntity} subTreeName={column.subTreeName} onValueSet={(valueArrays, optionArrays) => {\n          const v = valueArrays?.slice(-1)?.[0]\n          if (v) form.setFieldValue(columnKey, {id: v})\n        }} />\n      }\n    }\n    else if (column.valueType === UIConsts.richtext) {\n      column[\"colProps\"] = {xs: 24, md: 24}\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        return <RichText.WriteView key={item?.id} vaule={form.getFieldValue(columnKey)} onChange={value => {\n          form.setFieldValue(columnKey, value)\n        }} />\n      }\n    }\n    else if (column.valueType === UIConsts.imageUploader) {\n      column[\"colProps\"] = {xs: 24, md: 24}\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        // accept reference\n        // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\n        return <ImageUploader.WriteView accept=\"image/*\" key={item?.id} vaule={form.getFieldValue(columnKey)} onChange={value => {\n          form.setFieldValue(columnKey, value)\n        }} />\n      }\n    }\n    // 如果有 idOfEntity，也就是要处理 relation，弹框去查 relation\n    else if (idOfEntity) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        const vals = form.getFieldValue(columnKey)\n        return <>\n          {/*\n          <IdHolder idObjs={form.getFieldValue(columnKey)} idOfEntity = {idOfEntity}/>\n          */}\n          <Input.Group compact>\n            <Input\n              allowClear\n              style={{\n                width: '75%',\n              }}\n              placeholder={column.placeholder}\n              value={form.getFieldValue(columnKey)}\n              onChange={\n                e => {\n                  // clear\n                  if (e.target.value == \"\" || e.target.value == {}) {\n                    if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n                      form.setFieldValue(columnKey, [])\n                    } else if (relation === Consts.ManyToOne || relation === Consts.OneToOne) {\n                      form.setFieldValue(columnKey, null)\n                    } else {\n                      form.setFieldValue(columnKey, e.target.value)\n                    }\n                  } else {\n                    // create\n                    form.setFieldValue(columnKey, e.target.value)\n                  }\n                }\n              }\n            />\n            <Button type=\"primary\" onClick={e => {\n              showModal(columnKey)\n            }}><SearchOutlined /></Button>\n          </Input.Group>\n          {\n            vals && Array.isArray(vals) ? vals.map(v => customRender.readForm(v.id, idOfEntity, v.id))\n              : customRender.readForm(vals?.id, idOfEntity, vals?.id)\n          }\n          <Modal destroyOnClose={true} width={\"80%\"} height={\"60%\"} title={column.title} open={isModalOpen[columnKey]} onOk={e => handleOk(columnKey)} onCancel={e => handleCancel(columnKey)}>\n            <DirtTable entityName={idOfEntity}\n              rowSelection={{\n                getCheckboxProps: (record) => {\n                },\n                defaultSelectedRowKeys: vals ? Array.isArray(vals) ? vals.map(v => v.id) : [vals] : [],\n                type: (relation === Consts.OneToMany || relation === Consts.ManyToMany) ? \"checkbox\" : \"radio\",\n                onChange: (selectedRowKeys, selectedRows, info) => {\n                  // jpa compatiable\n                  if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n                    const ids = selectedRows.map(v => {return {id: v.id}})\n                    form.setFieldValue(columnKey, ids)\n                  } else if (relation === Consts.ManyToOne || relation === Consts.OneToOne) {\n                    const ids = selectedRows.map(v => {return {id: v.id}})\n                    form.setFieldValue(columnKey, ids[0])\n                  }\n                  // Pure Id,Maybe for mabatis compatiable\n                  else {\n                    const ids = selectedRows.map(v => {return v.id})\n                    form.setFieldValue(columnKey, ids[0])\n                  }\n\n                }\n              }} />\n          </Modal>\n        </>\n      }\n    }\n    return column\n  })\n\n  let wrapperOnFinish = useCallback((v) => {\n    onFinish(v);\n  })\n\n  const actionRef = useRef();\n  return <BetaSchemaForm\n    trigger={triggerCompoent}\n    formRef={actionRef}\n    onInit={onInit}\n    title={name}\n    layoutType='ModalForm'\n    columns={createColumns}\n    autoFocusFirstInput\n    submitTimeout={4000}\n    rowProps={{gutter: [16, 16]}}\n    colProps={{span: 24, }}\n    grid={true}\n    onFinish={v => {wrapperOnFinish(v);}}\n  >\n  </BetaSchemaForm>\n}\n\n\nexport default WriteForm;\n","import React, {useState, useEffect, useRef} from 'react';\nimport {PlusOutlined, } from '@ant-design/icons';\nimport {ProTable} from '@ant-design/pro-components';\nimport {Button, message, DatePicker, TimePicker, Space, Popconfirm} from 'antd';\nimport network from '../logic/network'\nimport ReadForm from './readForm'\nimport WriteForm from './writeForm'\nimport Consts from '../consts/consts'\nimport UIConsts from '../consts/uiConsts'\nimport customRender from './customRender'\nimport {isObj} from '../logic/util';\nimport Cascader from './cascader'\nimport RichText from './richEditor'\nimport ImageUploader from './imageUploader'\nimport SelectInput from './selectInput'\nimport SelectLiveInput from './selectLiveInput'\nconst {RangePicker} = DatePicker;\n\nexport default function DirtTable(props) {\n  // excludeIds: default self id\n  let {entityName, onSelected, rowSelection, readOnly} = props;\n  rowSelection = rowSelection || {}\n  let [columns, setColumns] = useState([]);\n  let [columnKeyMap, setColumnKeyMap] = useState({})\n\n\n  // 给 header 加点料，如加上新的 render，以支持在不同的场景下，渲染不同的组件，典型如：日期在创建时，是选择具体的值，但在搜索时，经常性是个范围。\n  const redefineHeader = (headers, c) => {\n    const {title, idOfEntity: cls, dataIndex, relation, dependColumn, key: columnKey} = c\n\n    // const {key: columnKey, idOfEntity, relation, dependColumn} = column\n    // json object 与 json 有区别。服务器过来的是 json，json 不支持key为数字，只能放在值里，如果前端需要，先放值里，再转到 key\n    if (c.valueEnum) {\n      c.valueEnum = Object.entries(c.valueEnum).reduce((a, [k, c]) => {a[c.status] = c; return a;}, {})\n    }\n\n    // 默认搜索组件\n    if (c.valueType === UIConsts.selectLiveInput) {\n      c.renderFormItem = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        return <SelectLiveInput.WriteView\n          size={1}\n          fetchOptions={\n            async (username) => {\n              const arg = form.getFieldValue(dependColumn)\n              return network.getOptionsAsync({entityName, subKey: columnKey, args: {[dependColumn]: arg}});\n            }\n          }\n          onChange={\n            (e) => {\n              form.setFieldValue(columnKey, e?.[0]?.value)\n            }\n          }\n        />\n      }\n    }\n    // 根据 searchType 自定义搜索组件\n    if (c.searchType != null) {\n      c.renderFormItem = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        if (c.searchType.valueType === UIConsts.selectLiveInput) {\n          return <SelectLiveInput.WriteView\n            size={1}\n            fetchOptions={\n              async (username) => {\n                const arg = form.getFieldValue(dependColumn)\n                return network.getOptionsAsync({entityName, subKey: columnKey, args: {[dependColumn]: arg}});\n              }\n            }\n            onChange={\n              (e) => {\n                form.setFieldValue(columnKey, e?.[0]?.value)\n              }\n            }\n          />\n        }\n\n        if (c.searchType.valueType === UIConsts.selectInput) {\n          let options = Object.entries(item.valueEnum).map(([k, v]) => {return {label: v.text, value: v.text}})\n          return <SelectInput.WriteView options={options} size={1} handleChange={e => {\n            form.setFieldValue(columnKey, e[0])\n          }} />\n\n        }\n        if (c.searchType.valueType === UIConsts.selectInputMultipal) {\n          let options = Object.entries(item.valueEnum).map(([k, v]) => {return {label: v.text, value: v.text}})\n          return <SelectInput.WriteView options={options} handleChange={e => {\n            form.setFieldValue(columnKey, e)\n          }} />\n\n        }\n        if (c.searchType.valueType === UIConsts.cascader) {\n          return <Cascader.SearchView idOfEntity={c.idOfEntity} subTreeName={c.subTreeName} onValueSet={(valueArrays, optionArrays) => {\n            const v = valueArrays?.slice(-1)?.[0]\n            if (v) form.setFieldValue(dataIndex, {id: v})\n          }} />\n        }\n        if (c.searchType.valueType === 'dateTimeRange') {\n          return <RangePicker showTime />\n        } else if (c.searchType.valueType === 'dateRange') {\n          return <RangePicker />\n        } else if (c.searchType.valueType === 'timeRange') {\n          return <TimePicker.RangePicker />\n        }\n      }\n    }\n\n    // 自定义 table row\n    // 1.　relation 关系处理优先级更高\n    if (relation === Consts.OneToOne || relation === Consts.ManyToOne) {\n      c['render'] = (text, record, index) => {return customRender.table(title, cls, record[dataIndex]);}\n      return c;\n    }\n    else if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n      c['render'] = (text, record, index) => {\n        return record[dataIndex]?.map(d => {return customRender.table(title, cls, d)})\n      }\n      return c;\n    }\n    // 2. 然后是自定义 table row\n    if (c.valueType === UIConsts.richtext) {\n      c['render'] = (text, record, index) => {\n        return <RichText.TableRowView value={record[dataIndex]} />\n      }\n      return c;\n    }\n    if (c.valueType === UIConsts.imageUploader) {\n      c['render'] = (text, record, index) => {\n        return <ImageUploader.TableRowView value={record[dataIndex]} />\n      }\n      return c;\n    }\n\n    // 生成 id 关连的实际 entity 详情跳转\n    // 可以是多对一的关系，也可以是纯 id\n    if (cls) {\n      let key = c[\"key\"]\n      c['render'] = (text, record, index) => {\n        const target = record[dataIndex]\n        if (target && Array.isArray(target)) {\n          return <> {target.map(r => <ReadForm key={r.id} title={title} id={r.id} cls={cls} />)} </>\n        }\n        else if (isObj(target)) {\n          const rid = target?.id;\n          return rid ? <ReadForm key={rid} title={title} id={rid} cls={cls} /> : '';\n        }\n        else {\n          const rid = target;\n          return rid ? <ReadForm key={rid} title={title} id={rid} cls={cls} /> : '';\n        }\n      }\n    }\n\n    // 处理 actions\n    if (c[\"actions\"]) {\n      c['render'] = (text, record, index) => Object.entries(c[\"actions\"]).map(([key, action]) => generateAction(headers, action, record, index));\n    }\n\n\n    return c;\n  }\n\n  useEffect(() => {\n    (async () => {\n      let headers = await network.getTableHeadersAsync(entityName)\n      if (readOnly) {\n        headers = headers.filter(c => c['title'] !== '操作')\n      }\n      headers = headers.map(c => {return redefineHeader(headers, c);});\n\n      // 形成 key 为键的 headers，方便一些取值，比如：在 searchForm 里生成 filter 参数时\n      let maps = headers.reduce((a, c) => {a[c.key] = c; return a;}, columnKeyMap);\n\n      setColumnKeyMap(maps)\n\n      setColumns(headers)\n\n    })()\n  }, [columnKeyMap, entityName]);\n\n\n  const searchAsyncWrapper = async (params = {}, sort, filter) => {\n    return network.searchAsync(entityName, columnKeyMap, params, sort, filter)\n  }\n\n  const generateCreateForm = () => {\n    let submitTypes = columns\n      .filter(c => c.submitType != null)\n      .map(c => c.submitType)\n      .map(c => {\n        // TODO:  定义 ManyToOne OneToMany 的 render 筛选器\n        return c;\n      })\n      .sort((a, b) => a.index - b.index);\n    return <WriteForm entityName={entityName} name=\"创建\" columns={submitTypes}\n      onFinish={values =>\n        network.createAsync(entityName, values, () => {actionRef.current.reload()})\n      }\n      triggerCompoent={<Button type=\"primary\"> <PlusOutlined /> 创建 </Button>} />\n  }\n\n  const generateAction = (headers, action, record, index) => {\n    let key = action.key\n    let text = action.text\n    if (key === 'edit' || key === 'detail') {\n\n      let formData = headers\n        //  只剔除  actions\n        .filter(c => c[\"actions\"] == null)\n        //  取出 submitType\n        .map(c => c.submitType)\n        //   过滤掉 null\n        .filter(c => c)\n        .sort((a, b) => a.index - b.index);\n      // 增加 id  显示\n      formData.splice(0, 0, {\n        \"index\": 10000,\n        \"width\": \"lg\",\n        \"key\": \"id\",\n        \"placeholder\": \"\",\n        \"submitable\": true,\n        \"valueType\": \"digit\",\n        \"title\": \"id\",\n        \"tooltip\": \"id\",\n        \"readonly\": true,\n        \"valueEnum\": null,\n        \"colProps\": {\n          \"md\": 12\n        },\n        \"initialValue\": record.id\n      });\n      formData = formData.map(d => {\n        d.initialValue = record[d.key];\n        return d;\n      })\n        .sort((a, b) => a.index - b.index);\n\n      // console.log(headers, action, record, index)\n      let isDetailed = key === 'detail'\n\n      // 只读模式\n      // https://github.com/ant-design/pro-components/issues/3323\n\n      return <WriteForm entityName={entityName} key={key} name={text} readOnly={isDetailed} columns={formData}\n        onFinish={(postdata) =>\n          network.updateAsync(entityName, postdata, () => {\n            actionRef.current.reload();\n          }\n          )\n        } triggerCompoent={<a> {text} </a>} />\n    }\n    else if (key === 'delete') {\n\n      return <Popconfirm key={key} title=\"确定删除?\" onConfirm={async () => {\n        network.deleteByIdAsync(entityName, record.id, () => {\n          actionRef.current.reload();\n        })\n      }}>\n        {<span className='link delete'> {text} </span>}\n      </Popconfirm>\n    } else {\n      // action\n      const entries = Object.entries(action.argColumnsMap)\n\n      // action 是否显示\n      if (key in record && !record[key]) {\n        return\n      }\n      if (entries.length == 0) {\n        // 自定义 action 不带任何参数\n        return <a key={key} onClick={() => {\n          doAction(text, {\n            entityName,\n            actionName: key,\n            id: record.id\n          });\n        }}>{text}</a>\n      } else {\n        //  自定义action 带参数，弹出 form 由用户输入\n        let actionFormArgs = entries.reduce((a, [k, v]) => {a.push(v); return a;}, [])\n        // console.log(actionFormArgs)\n        return <WriteForm entityName={entityName} key={key} name={text} columns={action.argColumnsMap.args} onFinish={(postdata) => {\n          doAction(text, {\n            entityName,\n            actionName: key,\n            id: record.id,\n            args: {args: postdata}\n          })\n        }\n        } triggerCompoent={<a href=\"#!\"> {text} </a>} />\n\n      }\n    }\n  }\n\n  const doAction = async (text, params) => {\n\n    let res = await network.actionAsync(params, () => {\n      message.success(`${text} 成功`);\n      actionRef.current.reload();\n    })\n  }\n  // 用来操作 ProTable\n  // https://procomponents.ant.design/components/table/#actionref-%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91\n  const actionRef = useRef();\n\n\n  return (columns && <ProTable\n    key={entityName}\n    scroll={{x: columns.length * 200}}\n    columns={columns}\n    actionRef={actionRef}\n    cardBordered\n    request={searchAsyncWrapper}\n    editable={{type: 'multiple', }}\n    columnsState={{\n      persistenceKey: 'Dirt',\n      persistenceType: 'localStorage',\n      onChange(value) {},\n    }}\n    rowKey=\"id\"\n    search={{labelWidth: 'auto', }}\n    options={{setting: {listsHeight: 400, }, }}\n    form={{\n      // 由于配置了 transform，提交的参与与定义的不同这里需要转化一下\n      // 这个地方会改变 url，可以在一定程度上通过 url 保持 form 的状态\n      syncToUrl: (values, type) => {return false;},\n    }\n    }\n    pagination={\n      {\n        pageSize: 10,\n        onChange: (page) => console.log(page),\n      }\n    }\n    dateFormatter=\"string\"\n    headerTitle=\"\"\n    toolBarRender={() => [generateCreateForm()]}\n\n    // 自定义选择项参考: https://ant.design/components/table-cn/#components-table-demo-row-selection-custom\n    rowSelection={{...rowSelection}}\n\n    tableAlertRender={({selectedRowKeys, selectedRows, onCleanSelected}) => (\n      <Space size={24} >\n\n        <span>\n          已选 {selectedRowKeys.length} 项\n          [{\n            selectedRowKeys.map(id => customRender.readForm(id, entityName, id))\n          }]\n          <a href=\"#!\" style={{marginInlineStart: 16}} onClick={() => network.deleteByIdsAsync(\n            {\n              entityName,\n              ids: selectedRowKeys\n            }, () => {\n              onCleanSelected()\n              actionRef.current.reload()\n            }\n          )}>远程删除</a>\n          <a href=\"#!\" style={{marginInlineStart: 16}} onClick={onCleanSelected}>导出数据</a>\n          {onSelected && <a href=\"#!\" style={{marginInlineStart: 16}} onClick={e => onSelected(selectedRows)}>选择</a>}\n        </span>\n      </ Space>\n    )}\n  />\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport {CarryOutOutlined, FormOutlined} from '@ant-design/icons';\nimport {Switch, Tree} from 'antd';\nimport Table from './dirtTable';\nimport network from '../logic/network';\nconst treeData = [\n  {\n    title: 'parent 1',\n    key: '0-0',\n    icon: <CarryOutOutlined />,\n    children: [\n      {\n        title: 'parent 1-0',\n        key: '0-0-0',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-0-0-0',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: (\n              <>\n                <div>one line title</div>\n              </>\n            ),\n            key: '0-0-0-1',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: 'leaf',\n            key: '0-0-0-2',\n            icon: <CarryOutOutlined />,\n          },\n        ],\n      },\n      {\n        title: 'parent 1-1',\n        key: '0-0-1',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-0-1-0',\n            icon: <CarryOutOutlined />,\n          },\n        ],\n      },\n      {\n        title: 'parent 1-2',\n        key: '0-0-2',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-0-2-0',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: 'leaf',\n            key: '0-0-2-1',\n            icon: <CarryOutOutlined />,\n            switcherIcon: <FormOutlined />,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'parent 2',\n    key: '0-1',\n    icon: <CarryOutOutlined />,\n    children: [\n      {\n        title: 'parent 2-0',\n        key: '0-1-0',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-1-0-0',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: 'leaf',\n            key: '0-1-0-1',\n            icon: <CarryOutOutlined />,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst App = (props) => {\n  const {entityName} = props;\n  const [showLine, setShowLine] = useState(true);\n  const [showIcon, setShowIcon] = useState(false);\n  const [showLeafIcon, setShowLeafIcon] = useState(true);\n  const [data, setData] = useState(treeData);\n\n  const dataAdapter = (ds) => {\n    var obj = JSON.parse(JSON.stringify(ds)\n      .replaceAll(\"\\\"name\\\":\", \"\\\"title\\\":\")\n      .replaceAll(\"\\\"subMenus\\\":\", \"\\\"children\\\":\")\n      .replaceAll(\"\\\"id\\\":\", \"\\\"key\\\":\")\n\n    );\n    console.log(obj)\n    return obj;\n  }\n\n  useEffect(() => {\n    (async () => {\n      const data = await network.getDataAsync('com.zk.mall.entity.Menu', 1)\n      setData(dataAdapter(data).children)\n    }\n    )()\n  }, [])\n  const onSelect = (selectedKeys, info) => {\n    console.log('selected', selectedKeys, info);\n  };\n\n\n\n  return (\n    <>\n      <div style={{display: 'flex'}}>\n        <div style={{width: '20%'}}>\n          <Tree\n            showLine={showLine}\n            showIcon={showIcon}\n            defaultExpandedKeys={['0-0-0']}\n            onSelect={onSelect}\n            treeData={data}\n          />\n        </div>\n        <div style={{width: '79%', height: '100vh'}}>\n          < Table entityName={entityName} />\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default App;\n","import React, {useState, useEffect, useSearchParams} from \"react\";\nimport 'antd/dist/antd.css';\nimport './App.css'\nimport axios from 'axios'\nimport Table from './components/dirtTable'\nimport qs from 'qs'\nimport Tree from './components/tree'\nimport {message} from \"antd\";\n\nfunction App() {\n  let [tables, setTables] = useState({})\n  let entityName = qs.parse(window.location.search, {ignoreQueryPrefix: true}).entityName\n\n  const [title, setTitle] = useState(null);\n  const [viewType, setViewType] = useState('Table');\n\n\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        let data = await axios.get(`getTableMaps`)\n        setTables(data.data);\n        let e = data?.data?.[entityName]?.text\n        if (!e) {\n          e = Object.entries(data.data)?.[0]?.[1]?.text;\n          window.location.search = \"entityName=\" + Object.entries(data.data)?.[0]?.[0];\n        }\n\n        setTitle(e)\n      } catch (e) {\n        message.error(\"请求错误,请查看链接是否正确\")\n      }\n    })()\n  }, [])\n  return (\n    <div >\n      {\n        Object.keys(tables).length > 0 && Object.entries(tables).map(([t, v]) => {\n          return <a key={t} href=\"#!\" onClick={e => {\n            window.location.search = \"entityName=\" + v.className;\n\n          }}>{v.text} |</a>\n        })\n      }\n      <h1>{title}</h1>\n      <hr style={{marginBottom: '25px'}} />\n      {viewType === 'Table' && (< Table entityName={entityName} />)}\n      {viewType === 'Tree' && (< Table entityName={entityName} />)}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}