{"version":3,"sources":["lib/query_builder/item.js","lib/query_builder/comparators.js","lib/query_builder/operators.js","lib/query_builder/functions.js","lib/query_builder/index.js","logic/util.js","logic/network.js","consts/consts.js","components/customRender.js","components/readForm.js","consts/uiConsts.js","components/richEditor.js","components/cascader.js","components/imageUploader.js","components/writeForm.js","components/dirtTable.js","components/tree.js","App.js","index.js"],"names":["Item","Object","classCallCheck","this","constructor","TypeError","concat","name","protoLits","getPrototypeOf","unshift","superProto","shift","missing","find","some","proto","hasOwnProperty","Comparator","selector","comparatorKeyWord","_this","value","arguments","length","undefined","_super","call","Function","String","Number","Like","_super2","Equal","_super3","NotEqual","_super4","Gt","_super5","Ge","_super6","Lt","_super7","Le","_super8","IsNull","_super9","IsNotNull","_super10","IsEmpty","_super11","IsNotEmpty","_super12","In","_len","values","Array","_key","_super13","join","Operator","operatorKeyWord","items","map","item","toString","And","_len2","_key2","apply","Or","_len3","_key3","Not","Exists","functionKeyWord","Absolute","Average","Min","Max","Sum","CurrentDate","CurrentTime","CurrentTimestamp","Size","Length","Trim","Upper","Lower","_super14","Concat","selectors","_super15","SpringFilterQueryBuilder","createClass","key","construct","toConsumableArray","isObj","o","isArray","axios","defaults","baseURL","interceptors","response","use","res","data","code","reasson","message","error","msg","Promise","reject","network","getTableHeadersAsync","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","entityName","ret","wrap","_context","prev","next","get","sent","abrupt","stop","_x","getDataAsync","_ref2","_callee2","id","_context2","_x2","_x3","deleteByIdAsync","_ref3","_callee3","success_cb","_context3","post","_x4","_x5","_x6","deleteByIdsAsync","_ref4","_callee4","postData","_context4","_x7","_x8","createAsync","_ref5","_callee5","_context5","objectSpread2","_x9","_x10","_x11","updateAsync","_ref6","_callee6","_context6","_x12","_x13","_x14","actionAsync","_ref7","_callee7","_context7","_x15","_x16","getDirtFieldTypeAsync","_ref8","_callee8","_context8","_x17","_x18","searchFullAsync","_ref9","_callee9","filter","_context9","_x19","_x20","_x21","searchAsync","_ref10","_callee10","columnKeyMap","params","sort","paramsCpy","filters","filterParams","filterStr","sortQuery","sortParams","pageParam","url","_args10","_context10","pageNumber","current","assign","entries","_ref11","_ref12","slicedToArray","_ref13","_ref14","column","searchType","valueType","SFQB","and","ge","le","Error","like","_ref15","_ref16","k","v","equal","arrow","pageSize","resolve","total","page","totalPages","success","_x22","_x23","consts","None","ManyToOne","OneToOne","OneToMany","ManyToMany","customRender","table","title","cls","idObj","console","assert","react_default","a","createElement","components_readForm","readForm","_useState","useState","_useState2","formData","setFormData","_useState3","_useState4","show","setShow","useEffect","readForm_regeneratorRuntime","headers","d","relation","cls2","idOfEntity","dataIndex","Consts","initialValue","_data$dataIndex","_data$dataIndex2","Fragment","c","b","index","SchemaForm","readonly","onInit","e","trigger","href","layoutType","columns","autoFocusFirstInput","submitTimeout","rowProps","gutter","colProps","span","grid","onFinish","uiConsts","password","money","textarea","date","dateTime","dateWeek","dateMonth","dateQuarter","dateYear","dateRange","dateTimeRange","time","timeRange","text","richtext","select","treeSelect","entitySelect","checkbox","rate","radio","radioButton","progress","percent","digit","longlat","second","avatar","switch","fromNow","image","jsonCode","color","cascader","imageUploader","group","formList","slide","richEditor","WriteView","props","setValue","innerChange","useCallback","onChange","lib_default","onBlur","theme","TableRowView","dangerouslySetInnerHTML","__html","SearchView","ReadView","subTreeName","onValueSet","options","setOptions","request","cascader_regeneratorRuntime","ds","childAlias","JSON","parse","stringify","replaceAll","loadData","selectedOptions","targetOption","loading","children","valueArrays","optionArrays","changeOnSelect","components_cascader","contentStyle","height","lineHeight","textAlign","background","fileList","setFileList","onPreview","imageUploader_regeneratorRuntime","file","src","imgWindow","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","window","open","document","write","outerHTML","antd_img_crop_esm","rotate","readOnly","upload","action","listType","newFileList","log","carousel","autoplay","style","writeForm","triggerCompoent","isModalOpen","setIsModalOpen","createColumns","columnKey","UIConsts","form","type","defaultRender","formItemProps","fieldProps","objectWithoutProperties","_excluded","_valueArrays$slice","slice","setFieldValue","xs","md","_excluded2","vaule","getFieldValue","_excluded3","_excluded4","vals","input","Group","compact","allowClear","width","placeholder","target","es_button","onClick","s","defineProperty","SearchOutlined","modal","destroyOnClose","onOk","onCancel","DirtTable","rowSelection","getCheckboxProps","record","defaultSelectedRowKeys","selectedRowKeys","selectedRows","info","ids","actionRef","useRef","formRef","RangePicker","DatePicker","onSelected","setColumns","setColumnKeyMap","redefineHeader","valueEnum","reduce","status","renderFormItem","dirtTable_excluded","showTime","time_picker","_record$dataIndex","r","rid","generateAction","dirtTable_regeneratorRuntime","maps","searchAsyncWrapper","_args2","generateCreateForm","submitTypes","submitType","reload","PlusOutlined","splice","submitable","tooltip","isDetailed","postdata","popconfirm","onConfirm","className","argColumnsMap","doAction","actionName","push","args","Table","scroll","x","cardBordered","editable","columnsState","persistenceKey","persistenceType","rowKey","search","labelWidth","setting","listsHeight","syncToUrl","pagination","dateFormatter","headerTitle","toolBarRender","tableAlertRender","onCleanSelected","space","size","marginInlineStart","CarryOutOutlined","FormOutlined","App","tables","setTables","qs","location","ignoreQueryPrefix","setTitle","_useState5","_useState6","viewType","App_regeneratorRuntime","keys","t","marginBottom","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.6789376d.chunk.js","sourcesContent":["class Item { //Abstract\n\tconstructor() {\n\t\tconst mustOverwriteMethods = [ \"toString\" ];\n\t\tif (new.target === Item) {\n\t\t\tthrow new TypeError(`Cannot construct ${new.target.name} instances directly`);\n\t\t}\n\t\tlet protoLits = [ Object.getPrototypeOf(this) ];\n\t\twhile(Object.getPrototypeOf(protoLits[0]).constructor.name !== \"Object\") { protoLits.unshift(Object.getPrototypeOf(protoLits[0])); }\n\t\tconst superProto = protoLits.shift();\n\t\tlet missing = mustOverwriteMethods.find(name => typeof superProto[name] === \"function\" && !protoLits.some(proto => proto.hasOwnProperty(name)));\n\t\tif (missing) {\n\t\t\tthrow new TypeError(`${this.constructor.name} need to overwrite ${missing}`);\n\t\t}\n\t}\n}\n\nexport { Item };","import { Item } from './item.js';\n\nclass Comparator extends Item { //Abstract\n\tconstructor(selector, comparatorKeyWord, value = undefined) {\n\t\tsuper();\n\t\tif (new.target === Comparator) {\n\t\t\tthrow new TypeError(`Cannot construct ${new.target.name} instances directly`);\n\t\t}\n\t\tif (!(selector instanceof Function || (typeof selector === 'string' || selector instanceof String))) {\n\t\t\tthrow new TypeError(`${new.target.name} parameter 'selector' must be a Function or a String!`);\n\t\t}\n\t\tif (value) {\n\t\t\tif (!(typeof value === 'string' || value instanceof String || typeof value === 'number' || value instanceof Number)) {\n\t\t\t\tthrow new TypeError(`${new.target.name} parameter 'value' must be a String or a Number!`);\n\t\t\t}\n\t\t}\n\t\tthis.selector = selector;\n\t\tthis.comparatorKeyWord = comparatorKeyWord;\n\t\tthis.value = value;\n\t}\n\n\ttoString() {\n\t\tif (this.value !== undefined) {\n\t\t\tif (typeof this.value === 'number' || this.value instanceof Number) {\n\t\t\t\treturn `${this.selector} ${this.comparatorKeyWord} ${this.value}`;\n\t\t\t} else {\n\t\t\t\treturn `${this.selector} ${this.comparatorKeyWord} '${this.value}'`;\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${this.selector} ${this.comparatorKeyWord}`;\n\t\t}\n\t}\n}\n\nclass Like extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"~\", value);\n\t}\n}\n\nclass Equal extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \":\", value);\n\t}\n}\n\nclass NotEqual extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"!\", value);\n\t}\n}\n\nclass Gt extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \">\", value);\n\t}\n}\n\nclass Ge extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \">:\", value);\n\t}\n}\n\nclass Lt extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"<\", value);\n\t}\n}\nclass Le extends Comparator {\n\tconstructor(selector, value) {\n\t\tsuper(selector, \"<:\", value);\n\t}\n}\n\nclass IsNull extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS NULL\");\n\t}\n}\n\nclass IsNotNull extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS NOT NULL\");\n\t}\n}\n\nclass IsEmpty extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS EMPTY\");\n\t}\n}\n\nclass IsNotEmpty extends Comparator {\n\tconstructor(selector) {\n\t\tsuper(selector, \"IS NOT EMPTY\");\n\t}\n}\n\nclass In extends Comparator {\n\tconstructor(selector, ...values) {\n\t\tsuper(selector, \"IN\", \"('\" + values.join(\"', '\") + \"')\");\n\t}\n\n\ttoString() {\n\t\treturn `${this.selector} ${this.comparatorKeyWord} ${this.value}`;\n\t}\n\n}\n\nexport { Comparator, Like, Equal, NotEqual, Gt, Ge, Lt, Le, IsNull, IsNotNull, IsEmpty, IsNotEmpty, In };","import { Item } from './item.js';\nimport { Comparator } from './comparators.js';\n\nclass Operator extends Item { //Abstract\n\tconstructor(operatorKeyWord, ...items) {\n\t\tsuper();\n\t\tif (new.target === Operator) {\n\t\t\tthrow new TypeError(\"Cannot construct \" + new.target.name + \" instances directly\");\n\t\t}\n\t\tthis.operatorKeyWord = operatorKeyWord;\n\t\tthis.items = items;\n\t}\n\n\ttoString() {\n\t\treturn  \"(\" + this.items.map(item => item.toString()).join(` ${this.operatorKeyWord} `) + \")\";\n\t}\n}\n\nclass And extends Operator {\n\tconstructor(...items) {\n\t\tsuper(\"AND\", ...items);\n\t}\n}\n\nclass Or extends Operator {\n\tconstructor(...items) {\n\t\tsuper(\"OR\", ...items);\n\t}\n}\n\nclass Not extends Operator {\n\tconstructor(item) {\n\t\tif (!(item instanceof Operator || item instanceof Comparator)) {\n\t\t\tthrow new TypeError(`${new.target.name} parameter 'item' must be a Operator or a Comparator!`);\n\t\t}\n\t\tsuper(\"NOT\", item);\n\t}\n}\n\nclass Exists extends Operator {\n\tconstructor(item) {\n\t\tif (!(item instanceof Operator || item instanceof Comparator)) {\n\t\t\tthrow new TypeError(`${new.target.name} parameter 'item' must be a Operator or a Comparator!`);\n\t\t}\n\t\tsuper(\"EXISTS\", item);\n\t}\n}\n\nexport { Operator, And, Or, Not, Exists };","import { Item } from './item.js';\nimport { Comparator } from './comparators.js';\n\nclass Function extends Item { //Abstract\n\tconstructor(functionKeyWord, selector) {\n\t\tif (new.target === Comparator) {\n\t\t\tthrow new TypeError(\"Cannot construct \" + new.target.name + \" instances directly\");\n\t\t}\n\t\tif (!(typeof selector === 'string' || selector instanceof String)) {\n\t\t\tthrow new TypeError(new.target.name + \" parameter 'selector' must be a String!\");\n\t\t}\n\t\tsuper();\n\t\tthis.selector = selector;\n\t\tthis.functionKeyWord = functionKeyWord;\n\t}\n\n\ttoString() {\n\t\tif (this.selector !== undefined) {\n\t\t\treturn this.functionKeyWord + \"(\" + this.selector + \")\";\n\t\t} else {\n\t\t\treturn this.functionKeyWord + \"()\";\n\n\t\t}\n\t}\n}\n\nclass Absolute extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"ABSOLUTE\", selector);\n\t}\n}\n\nclass Average extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"AVERAGE\", selector);\n\t}\n}\n\nclass Min extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"MIN\", selector);\n\t}\n}\n\nclass Max extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"MAX\", selector);\n\t}\n}\n\nclass Sum extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"SUM\", selector);\n\t}\n}\n\nclass CurrentDate extends Function {\n\tconstructor() {\n\t\tsuper(\"CURRENTDATE\");\n\t}\n}\n\nclass CurrentTime extends Function {\n\tconstructor() {\n\t\tsuper(\"CURRENTTIME\");\n\t}\n}\n\nclass CurrentTimestamp extends Function {\n\tconstructor() {\n\t\tsuper(\"CURRENTTIMESSTAMP\");\n\t}\n}\n\nclass Size extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"SIZE\", selector);\n\t}\n}\n\nclass Length extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"LENGTH\", selector);\n\t}\n}\n\nclass Trim extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"TRIM\", selector);\n\t}\n}\n\nclass Upper extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"UPPER\", selector);\n\t}\n}\n\nclass Lower extends Function {\n\tconstructor(selector) {\n\t\tsuper(\"LOWER\", selector);\n\t}\n}\n\nclass Concat extends Function {\n\tconstructor(...selectors) {\n\t\tsuper(\"CONCAT\", \"('\" + selectors.join(\", \") + \"')\");\n\t}\n}\n\nexport { Function, Absolute, Average, Min, Max, Sum, CurrentDate, CurrentTime, CurrentTimestamp, Size, Length, Trim, Upper, Lower, Concat };","import { Like, Equal, NotEqual, Gt, Ge, Lt, Le, IsNull, IsNotNull, IsEmpty, IsNotEmpty, In } from './comparators.js';\nimport { And, Or, Not, Exists } from './operators.js';\nimport { Absolute, Average, Min, Max, Sum, CurrentDate, CurrentTime, CurrentTimestamp, Size, Length, Trim, Upper, Lower, Concat } from './functions.js';\n\nexport class SpringFilterQueryBuilder {\n\tstatic and(...items) {\n\t\treturn new And(...items);\n\t}\n\n\tstatic or(...items) {\n\t\treturn new Or(...items);\n\t}\n\n\tstatic not(item) {\n\t\treturn new Not(item);\n\t}\n\n\tstatic exists(item) {\n\t\treturn new Exists(...item);\n\t}\n\n\tstatic like(selector, value) {\n\t\treturn new Like(selector, value);\n\t}\n\n\tstatic equal(selector, value) {\n\t\treturn new Equal(selector, value);\n\t}\n\n\tstatic notEqual(selector, value) {\n\t\treturn new NotEqual(selector, value);\n\t}\n\n\tstatic gt(selector, value) {\n\t\treturn new Gt(selector, value);\n\t}\n\n\tstatic ge(selector, value) {\n\t\treturn new Ge(selector, value);\n\t}\n\n\tstatic lt(selector, value) {\n\t\treturn new Lt(selector, value);\n\t}\n\n\tstatic le(selector, value) {\n\t\treturn new Le(selector, value);\n\t}\n\n\tstatic isNull(selector, value) {\n\t\treturn new IsNull(selector, value);\n\t}\n\n\tstatic isNotNull(selector, value) {\n\t\treturn new IsNotNull(selector, value);\n\t}\n\n\tstatic isEmpty(selector, value) {\n\t\treturn new IsEmpty(selector, value);\n\t}\n\n\tstatic isNotEmpty(selector, value) {\n\t\treturn new IsNotEmpty(selector, value);\n\t}\n\n\tstatic in(selector, ...value) {\n\t\treturn new In(selector, ...value);\n\t}\n\n\tstatic absolute(selector) {\n\t\treturn new Absolute(selector);\n\t}\n\n\tstatic average(selector) {\n\t\treturn new Average(selector);\n\t}\n\n\tstatic min(selector) {\n\t\treturn new Min(selector);\n\t}\n\n\tstatic max(selector) {\n\t\treturn new Max(selector);\n\t}\n\n\tstatic sum(selector) {\n\t\treturn new Sum(selector);\n\t}\n\n\tstatic currentDate(selector) {\n\t\treturn new CurrentDate(selector);\n\t}\n\n\tstatic currentTime(selector) {\n\t\treturn new CurrentTime(selector);\n\t}\n\n\tstatic currentTimestamp(selector) {\n\t\treturn new CurrentTimestamp(selector);\n\t}\n\n\tstatic size(selector) {\n\t\treturn new Size(selector);\n\t}\n\n\tstatic length(selector) {\n\t\treturn new Length(selector);\n\t}\n\n\tstatic trim(selector) {\n\t\treturn new Trim(selector);\n\t}\n\n\tstatic upper(selector) {\n\t\treturn new Upper(selector);\n\t}\n\n\tstatic lower(selector) {\n\t\treturn new Lower(selector);\n\t}\n\n\tstatic concat(selector) {\n\t\treturn new Concat(selector);\n\t}\n}","\nfunction isObj(o) {\n  return typeof o === 'object' &&\n    !Array.isArray(o) &&\n    o !== null\n}\n\nexport {\n  isObj\n}\n","import axios from 'axios';\nimport {message} from 'antd';\nimport {SpringFilterQueryBuilder as SFQB} from '../lib/query_builder';\nimport {isObj} from './util'\n\n// respone拦截器\n\naxios.defaults.baseURL = 'http://127.0.0.1:8081/dirt/'\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (res) {\n  // compatiable with  wrapper response \n  if (isObj(res) && 'data' in res && isObj(res.data) && 'code' in res.data) {\n    if (res.data.code === 0) {\n      // message.success('成功');\n      return res.data;\n    } else {\n      const reasson = Array.isArray(res.data.data) ? res.data.data.join(\";\") : res.data.data;\n      message.error(res.data.msg + \":\" + reasson);\n      return Promise.reject(reasson);\n    }\n\n  } else {\n    return res;\n  }\n}, function (error) {\n  message.error(error);\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nconst getEntitySchemaAsync = async (entityName) => {\n  const ret = await axios.get(`getEntitySchema?entityName=${entityName}`)\n  return ret.data;\n}\n\nconst getDataAsync = async (entityName, id) => {\n  const ret = await axios.get(`getData?entityName=${entityName}&id=${id}`)\n  return ret.data;\n}\n\nconst deleteByIdAsync = async (entityName, id, success_cb) => {\n  let ret = await axios.post(`deleteById`, {entityName, id})\n  success_cb && success_cb()\n  return ret.data;\n}\nconst deleteByIdsAsync = async (postData, success_cb) => {\n  const ret = axios.post('deleteByIds', postData)\n  success_cb && success_cb();\n  return ret.data;\n}\n\n\nconst createAsync = async (entityName, values, success_cb) => {\n  const ret = await axios.post(`create?entityName=${entityName}`, {\n    ...values\n  })\n  success_cb && success_cb();\n  return ret.data;\n}\nconst updateAsync = async (entityName, postData, success_cb) => {\n  const ret = await axios.post(`update?entityName=${entityName}`, postData)\n  success_cb && success_cb();\n  return ret.data;\n}\nconst actionAsync = async (postData, success_cb) => {\n  const ret = await axios.post(`action`, postData)\n  success_cb && success_cb();\n  return ret.data;\n}\n\nconst getDirtFieldTypeAsync = async (postData, success_cb) => {\n  const ret = await axios.post(`getDirtFieldType`, postData)\n  success_cb && success_cb();\n  return ret.data;\n}\nconst getFullDataslAsync = async (entityName, filter, success_cb) => {\n  const ret = await axios.post(`getFullDatas?entityName=${entityName}`, {filter})\n  success_cb && success_cb();\n  return ret.data;\n}\nconst getDatasAsync = async (entityName, columnKeyMap, params = {}, sort, filter, success_cb) => {\n  // 映射 current 到 pageNumber\n  params.pageNumber = params.current;\n  delete params[\"current\"];\n\n  // 制作 JPA filters\n  let paramsCpy = Object.assign({}, params)\n  delete paramsCpy[\"pageNumber\"];\n  delete paramsCpy[\"pageSize\"];\n\n\n  const filters = Object.entries(params)\n    .filter(([key, value]) => {\n      return key !== 'pageNumber' && key !== 'pageSize' && value\n    })\n\n    // 处理 eFilterOperator \n    .map(([key, value]) => {\n      if (Array.isArray(value)) {\n        let column = columnKeyMap[key];\n        if (column.searchType.valueType === \"dateTimeRange\"\n          || column.searchType.valueType === \"dateRange\"\n          || column.searchType.valueType === \"timeRange\"\n        ) {\n          return SFQB.and(SFQB.ge(key, value[0]), SFQB.le(key, value[1]));\n        } else {\n          throw new Error(\"未实现\");\n        }\n      } else if (typeof (value) == 'string') {\n        if (value.length > 0)\n          return SFQB.like(key, `${value}`);\n        return null;\n      } else {\n        if (isObj(value)) {\n          // convert key {a:1,b:1} ==>  \"key.a : 1 AND key.b : 2\"\n          return Object.entries(value).map(([k, v]) => SFQB.equal(key + '.' + k, v))\n        }\n        else {\n          return SFQB.equal(key, `${value}`);\n        }\n      }\n    })\n\n  // 手动组装spring-filter \n  let filterParams = \"\"\n  //  全部组装成 and 条件，在 table　里没有例外\n  let filterStr = SFQB.and(...filters).toString();\n  //  复合spring-filter 标准\n  if (filterStr !== \"()\") {filterParams = {filter: filterStr}}\n\n\n  // 制作 JPA page 里的sort\n  let sortQuery = Object.entries(sort)\n    .map(v => {\n      let arrow = \"desc\"\n      if (v[1] === \"ascend\")\n        arrow = \"asc\"\n      return v[0] + \",\" + arrow\n    })\n    .join('&')\n  let sortParams = \"\"\n  if (sortQuery.length)\n    sortParams = `&sort=${sortQuery}`;\n\n  // params.pageNumber-1 从 0 页开始\n  const pageParam = `&size=${params.pageSize}&page=${params.pageNumber - 1}`\n\n  let url = `getDatas?entityName=${entityName}${pageParam}${sortParams}`;\n\n  // 要符合 ProTalbe 的数据格式\n  let ret = await axios.post(url, {...filterParams});\n  return new Promise(\n    (resolve, reject) => {\n      resolve({\n        data: ret.data,\n        total: ret.page.totalPages * ret.page.pageSize,\n        success: true\n      });\n\n    }\n  );\n}\nexport default {\n  getTableHeadersAsync: getEntitySchemaAsync,\n  getDataAsync,\n  deleteByIdAsync,\n  deleteByIdsAsync,\n  createAsync,\n  updateAsync,\n  actionAsync,\n  getDirtFieldTypeAsync,\n  searchFullAsync: getFullDataslAsync,\n  searchAsync: getDatasAsync\n}\n\n\n\n","export default {\n  None: \"None\",\n  ManyToOne: \"ManyToOne\",\n  OneToOne: \"OneToOne\",\n  OneToMany: \"OneToMany\",\n  ManyToMany: \"ManyToMany\",\n}\n","import React from 'react';\nimport ReadForm from './readForm'\nimport {isObj} from '../logic/util'\nexport default {\n  table: (title, cls, idObj) => {\n    if(idObj==null) \n    {\n      return\n    }\n    if (isObj(idObj)) {\n      console.assert(idObj.id,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj.id} title={title} id={idObj.id} cls={cls} name={idObj?.name} />\n    }\n    else {\n      console.assert(idObj,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj} title={title} id={idObj} cls={cls}/>\n    }\n  },\n  readForm: (title, cls, idObj) => {\n    if(idObj==null) \n    {\n      return\n    }\n    if (isObj(idObj))\n    {\n      console.assert(idObj.id,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj.id} title={title} id={idObj.id} cls={cls} name={idObj?.name} />\n      }\n    else\n    {\n      console.assert(idObj,\"必须有 id\"+idObj)\n      return <ReadForm key={cls + idObj} title={title} id={idObj} cls={cls} />\n      }\n  }\n}\n\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport {BetaSchemaForm, } from '@ant-design/pro-components';\nimport network from '../logic/network'\nimport Consts from \"../consts/consts\"\nimport customRender from './customRender'\nimport {isObj} from '../logic/util';\n\nexport default function ({title, cls, id, name}) {\n  let [formData, setFormData] = useState([])\n  // 如果没有 name，则使用 id\n  if (name == null) name = id\n  const [show, setShow] = useState(false);\n\n  useEffect(\n    () => {\n      show && (async () => {\n        let headers = await network.getTableHeadersAsync(cls)\n        let data = await network.getDataAsync(cls, id)\n        headers = headers.map(d => {\n          const {relation, idOfEntity: cls2, id, title, dataIndex} = d;\n          if (relation === Consts.None) {\n            d.initialValue = data[d.key];\n          }\n          // 有 relation，要做嵌套显示处理\n          else if (relation === Consts.OneToOne || relation === Consts.ManyToOne) {\n            d.initialValue = customRender.readForm(title, cls2, data[dataIndex]?.id);\n          }\n          else if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n            d.initialValue = <>\n              {\n                data[dataIndex]?.map(c => {return customRender.readForm(title, cls2, c)})\n              }\n            </>\n          } else {\n            // why here ????\n            debugger\n          }\n\n          return d;\n        }).sort((a, b) => a.index - b.index);\n        setFormData(headers)\n      })()\n    }\n    , [show, cls, id])\n\n  return <BetaSchemaForm\n    title={title + \":\" + id}\n    readonly={true}\n    onInit={e => setShow(true)}\n    trigger={<a href=\"#/\"> {name} </a>}\n    layoutType='ModalForm'\n    columns={formData}\n    autoFocusFirstInput\n    submitTimeout={4000}\n    rowProps={{gutter: [16, 16]}}\n    colProps={{span: 12, }}\n    grid={true}\n    onFinish={v => {setShow(false);}} >\n  </BetaSchemaForm>\n}\n","export default {\n  //密码输入框\n  password: \"password\",\n  //金额输入框\n  money: \"money\",\n  //文本域\n  textarea: \"textarea\",\n  //日期\n  date: \"date\",\n  //日期时间\n  dateTime: \"dateTime\",\n  //周\n  dateWeek: \"dateWeek\",\n  //月\n  dateMonth: \"dateMonth\",\n  //季度输入\n  dateQuarter: \"dateQuarter\",\n  //年份输入\n  dateYear: \"dateYear\",\n  //日期区间\n  dateRange: \"dateRange\",\n  //日期时间区间\n  dateTimeRange: \"dateTimeRange\",\n  //时间\n  time: \"time\",\n  //时间区间\n  timeRange: \"timeRange\",\n  //文本框\n  text: \"text\",\n  //富文本\n  richtext: \"richtext\",\n  //下拉框\n  select: \"select\",\n  //树形下拉框\n  treeSelect: \"treeSelect\",\n\n  entitySelect: \"entitySelect\",\n  // 多选框\n  checkbox: \"checkbox\",\n  //星级组件\n  rate: \"rate\",\n  //单选框\n  radio: \"radio\",\n  //按钮单选框\n  radioButton: \"radioButton\",\n  //进度条\n  progress: \"progress\",\n  //百分比组件\n  percent: \"percent\",\n  //数字输入框\n  digit: \"digit\",\n  // 经纬度\n  longlat: \"longlat\",\n  //秒格式化\n  second: \"second\",\n  //头像\n  avatar: \"avatar\",\n  //代码框\n  code: \"code\",\n  //开关 switch, switch 是关键字\n  \"switch\": \"switch\",\n  //相对于当前时间\n  fromNow: \"fromNow\",\n  //图片\n  image: \"image\",\n  //代码框，但是带了 json 格式化\n  jsonCode: \"jsonCode\",\n  //颜色选择器\n  color: \"color\",\n  //级联选择器\n  cascader: \"cascader\",\n\n  // 图片上传\n  imageUploader: \"imageUploader\",\n\n  group: \"group\",\n  formList: \"formList\",\n  slide: \"slide\"\n}\n","import React, {useState, useCallback} from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n//TODO: 回车才设值，测试先这样吧 \nfunction WriteView(props) {\n  const [value, setValue] = useState(props.value || '');\n  let innerChange = useCallback((value) => {\n    setValue(value);\n    props.onChange && props.onChange(value);\n  }, [props.onChange])\n  return <ReactQuill onBlur={e => {\n  }} theme=\"snow\" value={value} onChange={v => innerChange(v)} />;\n}\n\nfunction TableRowView(props) {\n  return <div dangerouslySetInnerHTML={{__html: props.value}} />;\n}\nexport default {\n  WriteView,\n  TableRowView,\n  SearchView: null,\n  ReadView: null,\n}\n","import {Cascader} from 'antd';\nimport React, {useState, useEffect} from 'react';\nimport network from '../logic/network'\n\nconst dataAdapter = (ds, childAlias) => {\n  if (ds) {\n    var obj = JSON.parse(JSON.stringify(ds)\n      .replaceAll(\"\\\"name\\\":\", \"\\\"label\\\":\")\n      .replaceAll(\"\\\"id\\\":\", \"\\\"value\\\":\")\n      .replaceAll(\"\\\"\" + childAlias + \"\\\":\", \"\\\"children\\\":\")\n    );\n    return obj;\n  }\n  return ds;\n}\nconst SearchView = (props) => {\n  const {idOfEntity, subTreeName,onValueSet} = props;\n  const [options, setOptions] = useState([]);\n\n  const request = async (id) => {\n    let data = []\n    if (id == null) {\n      data = await network.searchFullAsync(idOfEntity, \"(name : 'root')\");\n      data = data[0]\n    } else {\n      data = await network.getDataAsync(idOfEntity, id);\n    }\n    return data ? dataAdapter(data[subTreeName], subTreeName) : []\n  }\n  useEffect(() => {\n    (async () => {\n      let d = await request(null)\n      setOptions(d)\n    })()\n  }, [])\n\n  const onChange = (valueArrays, optionArrays) => {\n    onValueSet(valueArrays, optionArrays)\n  };\n\n  const loadData = async (selectedOptions) => {\n    const targetOption = selectedOptions[selectedOptions.length - 1];\n    targetOption.loading = true; // load options lazily\n    let id = targetOption.value\n    let d = await request(id)\n    targetOption.children = d;\n    targetOption.loading = false;\n    setOptions([...options]);\n  };\n\n  return <Cascader options={options} loadData={loadData} onChange={onChange} changeOnSelect />;\n};\n\n// export default App;\nexport default {\n  WriteView: SearchView,\n  TableRowView: null,\n  SearchView,\n  ReadView: null,\n}\n\n","import React, {useState} from 'react';\nimport {Upload, Carousel} from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nfunction WriteView(props) {\n  const [fileList, setFileList] = useState([\n    // {\n    //   uid: '-1',\n    //   name: 'image.png',\n    //   status: 'done',\n    //   url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n    // },\n  ]);\n\n  const onChange = ({fileList: newFileList}) => {\n    console.log(newFileList)\n    setFileList(newFileList);\n  };\n\n  const onPreview = async (file) => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    const a = imgWindow?.document.write(image.outerHTML);\n  };\n\n  return (\n    <ImgCrop rotate readOnly>\n      <Upload\n        action=\"http://127.0.0.1:8081/dirt/upload\"\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}\n      >\n        {fileList.length < 5 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};\n\n\nconst contentStyle = {\n  height: '160px',\n  color: '#fff',\n  lineHeight: '160px',\n  textAlign: 'center',\n  background: '#364d79',\n};\n\nconst TableRowView = () => (\n  <Carousel autoplay>\n    <div>\n      <h3 style={contentStyle}>1</h3>\n    </div>\n    <div>\n      <h3 style={contentStyle}>2</h3>\n    </div>\n    <div>\n      <h3 style={contentStyle}>3</h3>\n    </div>\n    <div>\n      <h3 style={contentStyle}>4</h3>\n    </div>\n  </Carousel>\n);\nexport default {\n  WriteView,\n  TableRowView,\n  SearchView: null,\n  ReadView: null,\n}\n","import React, {useState, useRef, useEffect} from 'react';\nimport {BetaSchemaForm} from '@ant-design/pro-components';\nimport DirtTable from './dirtTable'\nimport {Modal, Input, Button} from 'antd';\nimport Consts from '../consts/consts'\nimport UIConsts from '../consts/uiConsts'\nimport customRender from './customRender'\nimport RichText from './richEditor'\nimport Cascader from './cascader'\nimport ImageUploader from './imageUploader'\nimport network from '../logic/network'\nimport {SearchOutlined} from '@ant-design/icons';\n\nexport default (props) => {\n  const {name, triggerCompoent, columns, onFinish, onInit} = props;\n  // debugger\n  // 有可能有多个 modal 需要保持状态，使用{}\n  const [isModalOpen, setIsModalOpen] = useState({});\n  const [fieldName, setFieldName] = useState(\"\");\n  \n\n  const showModal = (name) => {\n    setIsModalOpen(s => {return {...s, [name]: true}});\n  };\n  const handleOk = (name) => {\n    setIsModalOpen(s => {return {...s, [name]: false}});\n  };\n  const handleCancel = (name) => {\n    setIsModalOpen(s => {return {...s, [name]: false}});\n  };\n\n  // TODO: do not work \n  // useEffect(()=>{\n  //   (async ()=>{\n  //     let d = await network.getDirtFieldTypeAsync({\n  //       \"args\": {\"tableName\": \"com.zk.experiment.Card\"},\n  //       \"fieldName\": \"columnName\",\n  //       \"entityName\": \"com.zk.dirt.entity.MetaType\"\n  //     })\n  //     //TODO: 组织创建表单的联动js 逻辑\n  //     let old = Object.assign({}, columns[columns.findIndex(c => c.key === 'columnName')])\n  //     columns[columns.findIndex(c => c.key === 'columnName')] = {\n  //       valueType: 'dependency',\n  //       name: ['tableName'],\n  //       columns: (obj) => {\n  //         let type = obj.tableName\n  //         setFieldName(type)\n  //         debugger\n  //         return [\n  //           d\n  //         ];\n  //\n  //         // return [];\n  //       },\n  //     }\n  //   })()\n  // },[fieldName])\n\n  let createColumns = columns.map(column => {\n    const {key: columnKey, idOfEntity, relation} = column\n    // 自定义创建 formItem\n    if (column.valueType === UIConsts.cascader) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        // debugger\n        return <Cascader.WriteView idOfEntity={idOfEntity} subTreeName={column.subTreeName} onValueSet={(valueArrays, optionArrays) => {\n          const v = valueArrays?.slice(-1)?.[0]\n          if (v) form.setFieldValue(columnKey, {id: v})\n        }} />\n      }\n    }\n    else if (column.valueType === UIConsts.richtext) {\n      column[\"colProps\"] = {xs: 24, md: 24}\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        return <RichText.WriteView key={item?.id} vaule={form.getFieldValue(columnKey)} onChange={value => {\n          form.setFieldValue(columnKey, value)\n        }} />\n      }\n    }\n    else if (column.valueType === UIConsts.imageUploader) {\n      column[\"colProps\"] = {xs: 24, md: 24}\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        return <ImageUploader.WriteView key={item?.id} vaule={form.getFieldValue(columnKey)} onChange={value => {\n          form.setFieldValue(columnKey, value)\n        }} />\n      }\n    }\n    // 如果有 idOfEntity，也就是要处理 relation，弹框去查 relation\n    else if (idOfEntity) {\n      column[\"renderFormItem\"] = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        const vals = form.getFieldValue(columnKey)\n        return <>\n          {/*\n          <IdHolder idObjs={form.getFieldValue(columnKey)} idOfEntity = {idOfEntity}/>\n          */}\n          <Input.Group compact>\n            <Input\n              allowClear\n              style={{\n                width: '75%',\n              }}\n              placeholder={column.placeholder}\n              value={form.getFieldValue(columnKey)}\n              onChange={\n                e => {\n                  // clear\n                  if (e.target.value == \"\" || e.target.value == {}) {\n                    if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n                      form.setFieldValue(columnKey, [])\n                    } else if (relation === Consts.ManyToOne || relation === Consts.OneToOne) {\n                      form.setFieldValue(columnKey, null)\n                    } else {\n                      form.setFieldValue(columnKey, e.target.value)\n                    }\n                  } else {\n                    // create\n                    form.setFieldValue(columnKey, e.target.value)\n                  }\n                }\n              }\n            />\n            <Button type=\"primary\" onClick={e => {\n              showModal(columnKey)\n            }}><SearchOutlined /></Button>\n          </Input.Group>\n          {\n            vals && Array.isArray(vals) ? vals.map(v => customRender.readForm(v.id, idOfEntity, v.id))\n              : customRender.readForm(vals?.id, idOfEntity, vals?.id)\n          }\n          <Modal destroyOnClose={true} width={\"80%\"} height={\"60%\"} title={column.title} open={isModalOpen[columnKey]} onOk={e => handleOk(columnKey)} onCancel={e => handleCancel(columnKey)}>\n            <DirtTable entityName={idOfEntity}\n              rowSelection={{\n                getCheckboxProps: (record) => {\n                  // let disabled = false\n                  // if (Array.isArray(vals)) {\n                  //   disabled = vals?.map(v => v.id).includes(record.id)\n                  // } else {\n                  //   disabled = record.id === vals?.id\n                  // }\n                  // return {\n                  //   disabled,\n                  // }\n                },\n                defaultSelectedRowKeys: vals ? Array.isArray(vals) ? vals.map(v => v.id) : [vals] : [],\n                type: (relation === Consts.OneToMany || relation === Consts.ManyToMany) ? \"checkbox\" : \"radio\",\n                onChange: (selectedRowKeys, selectedRows, info) => {\n                  // JPA compatiable\n                  if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n                    const ids = selectedRows.map(v => {return {id: v.id}})\n                    form.setFieldValue(columnKey, ids)\n                  } else if (relation === Consts.ManyToOne || relation === Consts.OneToOne) {\n                    const ids = selectedRows.map(v => {return {id: v.id}})\n                    form.setFieldValue(columnKey, ids[0])\n                  }\n                  // Pure Id,Maybe for mabatis compatiable\n                  else {\n                    const ids = selectedRows.map(v => {return v.id})\n                    form.setFieldValue(columnKey, ids[0])\n                  }\n\n                }\n              }} />\n          </Modal>\n        </>\n      }\n    }\n    return column\n  })\n\n  const actionRef = useRef();\n  return <BetaSchemaForm\n    trigger={triggerCompoent}\n    formRef={actionRef}\n    onInit={onInit}\n    title={name}\n    layoutType='ModalForm'\n    columns={createColumns}\n    autoFocusFirstInput\n    submitTimeout={4000}\n    rowProps={{gutter: [16, 16]}}\n    colProps={{span: 24, }}\n    grid={true}\n    onFinish={v => {onFinish(v);}}\n  >\n  </BetaSchemaForm>\n}\n","import React, {useState, useEffect, useRef} from 'react';\nimport {PlusOutlined, } from '@ant-design/icons';\nimport {ProTable} from '@ant-design/pro-components';\nimport {Button, message, DatePicker, TimePicker, Space, Popconfirm} from 'antd';\nimport network from '../logic/network'\nimport ReadForm from './readForm'\nimport WriteForm from './writeForm'\nimport Consts from '../consts/consts'\nimport UIConsts from '../consts/uiConsts'\nimport customRender from './customRender'\nimport {isObj} from '../logic/util';\nimport Cascader from './cascader'\nimport RichText from './richEditor'\nimport ImageUploader from './imageUploader'\nconst {RangePicker} = DatePicker;\n\n\nexport default function DirtTable(props) {\n  // excludeIds: default self id\n  let {entityName, onSelected, rowSelection, readOnly} = props;\n  rowSelection = rowSelection || {}\n  let [columns, setColumns] = useState([]);\n  let [columnKeyMap, setColumnKeyMap] = useState({})\n\n\n  // 给 header 加点料，如加上新的 render，以支持在不同的场景下，渲染不同的组件，典型如：日期在创建时，是选择具体的值，但在搜索时，经常性是个范围。\n  const redefineHeader = (headers, c) => {\n    const {title, idOfEntity: cls, dataIndex, relation} = c\n\n    // json object 与 json 有区别。服务器过来的是 json，json 不支持key为数字，只能放在值里，如果前端需要，先放值里，再转到 key\n    if (c.valueEnum) {\n      c.valueEnum = Object.entries(c.valueEnum).reduce((a, [k, c]) => {a[c.status] = c; return a;}, {})\n    }\n\n    // 自定义搜索栏\n    if (c.searchType != null) {\n      c.renderFormItem = (item, {type, defaultRender, formItemProps, fieldProps, ...rest}, form) => {\n        if (c.searchType.valueType === UIConsts.cascader) {\n          return <Cascader.SearchView idOfEntity={c.idOfEntity} subTreeName={c.subTreeName} onValueSet={(valueArrays, optionArrays) => {\n            const v = valueArrays?.slice(-1)?.[0]\n            if (v) form.setFieldValue(dataIndex, {id: v})\n          }} />\n        }\n        if (c.searchType.valueType === 'dateTimeRange') {\n          return <RangePicker showTime />\n        } else if (c.searchType.valueType === 'dateRange') {\n          return <RangePicker />\n        } else if (c.searchType.valueType === 'timeRange') {\n          return <TimePicker.RangePicker />\n        }\n      }\n    }\n\n\n    // 自定义 table row\n    // 1.　relation 关系处理优先级更高\n    if (relation === Consts.OneToOne || relation === Consts.ManyToOne) {\n      c['render'] = (text, record, index) => {return customRender.table(title, cls, record[dataIndex]);}\n      return c;\n    }\n    else if (relation === Consts.OneToMany || relation === Consts.ManyToMany) {\n      c['render'] = (text, record, index) => {\n        return record[dataIndex]?.map(d => {return customRender.table(title, cls, d)})\n      }\n      return c;\n    }\n    // 2. 然后是自定义 table row\n    if (c.valueType === UIConsts.richtext) {\n      c['render'] = (text, record, index) => {\n        return <RichText.TableRowView value={record[dataIndex]} />\n      }\n      return c;\n    }\n    if (c.valueType === UIConsts.imageUploader) {\n      c['render'] = (text, record, index) => {\n        return <ImageUploader.TableRowView value={record[dataIndex]} />\n      }\n      return c;\n    }\n\n    // 生成 id 关连的实际 entity 详情跳转\n    // 可以是多对一的关系，也可以是纯 id\n    if (cls) {\n      let key = c[\"key\"]\n      c['render'] = (text, record, index) => {\n        const target = record[dataIndex]\n        if (target && Array.isArray(target)) {\n          return <> {target.map(r => <ReadForm key={r.id} title={title} id={r.id} cls={cls} />)} </>\n        }\n        else if (isObj(target)) {\n          const rid = target?.id;\n          return rid ? <ReadForm key={rid} title={title} id={rid} cls={cls} /> : '';\n        }\n        else {\n          const rid = target;\n          return rid ? <ReadForm key={rid} title={title} id={rid} cls={cls} /> : '';\n        }\n      }\n    }\n\n    // 处理 actions\n    if (c[\"actions\"]) {\n      c['render'] = (text, record, index) => Object.entries(c[\"actions\"]).map(([key, action]) => generateAction(headers, action, record, index));\n    }\n\n\n    return c;\n  }\n\n  useEffect(() => {\n    (async () => {\n      let headers = await network.getTableHeadersAsync(entityName)\n      if (readOnly) {\n        headers = headers.filter(c => c['title'] !== '操作')\n      }\n      headers = headers.map(c => {return redefineHeader(headers, c);});\n\n      // 形成 key 为键的 headers，方便一些取值，比如：在 searchForm 里生成 filter 参数时\n      let maps = headers.reduce((a, c) => {a[c.key] = c; return a;}, columnKeyMap);\n\n\n      setColumnKeyMap(maps)\n\n      setColumns(headers)\n\n    })()\n  }, [columnKeyMap, entityName]);\n\n\n  const searchAsyncWrapper = async (params = {}, sort, filter) => {\n    return network.searchAsync(entityName, columnKeyMap, params, sort, filter)\n\n    // return new Promise(\n    //   (resolve, reject) => {\n    //     resolve({\n    //       data: result.data.filter(d => d.id != excludeId),\n    //       total: result.total,\n    //       success: result.success\n    //     });\n    //   }\n    // );\n  }\n\n  const generateCreateForm = () => {\n    let submitTypes = columns\n      .filter(c => c.submitType != null)\n      .map(c => c.submitType)\n      .map(c => {\n        // TODO:  定义 ManyToOne OneToMany 的 render 筛选器\n        return c;\n      })\n      .sort((a, b) => a.index - b.index);\n    return <WriteForm name=\"创建\" columns={submitTypes}\n      onFinish={values =>\n        network.createAsync(entityName, values, () => {actionRef.current.reload()})\n      }\n      triggerCompoent={<Button type=\"primary\"> <PlusOutlined /> 创建 </Button>} />\n  }\n\n  const generateAction = (headers, action, record, index) => {\n    let key = action.key\n    let text = action.text\n    if (key === 'edit' || key === 'detail') {\n\n      let formData = headers\n        //  只剔除  actions\n        .filter(c => c[\"actions\"] == null)\n        //  取出 submitType\n        .map(c => c.submitType)\n        //   过滤掉 null\n        .filter(c => c)\n        .sort((a, b) => a.index - b.index);\n      // 增加 id  显示\n      formData.splice(0, 0, {\n        \"index\": 10000,\n        \"width\": \"lg\",\n        \"key\": \"id\",\n        \"placeholder\": \"\",\n        \"submitable\": true,\n        \"valueType\": \"digit\",\n        \"title\": \"id\",\n        \"tooltip\": \"id\",\n        \"readonly\": true,\n        \"valueEnum\": null,\n        \"colProps\": {\n          \"md\": 12\n        },\n        \"initialValue\": record.id\n      });\n      formData = formData.map(d => {\n        d.initialValue = record[d.key];\n        return d;\n      })\n        .sort((a, b) => a.index - b.index);\n\n      // console.log(headers, action, record, index)\n      let isDetailed = key === 'detail'\n\n      // 只读模式\n      // https://github.com/ant-design/pro-components/issues/3323\n\n      return <WriteForm key={key} name={text} readOnly={isDetailed} columns={formData}\n        onFinish={(postdata) =>\n          network.updateAsync(entityName, postdata, () => {\n            actionRef.current.reload();\n          }\n          )\n        } triggerCompoent={<a href=\"#!\"> {text} </a>} />\n    }\n    else if (key === 'delete') {\n\n      return <Popconfirm key={key} title=\"确定删除?\" onConfirm={async () => {\n        network.deleteByIdAsync(entityName, record.id, () => {\n          actionRef.current.reload();\n        })\n      }}>\n        {<span className='link delete'> {text} </span>}\n      </Popconfirm>\n    } else {\n      // action\n      const entries = Object.entries(action.argColumnsMap)\n\n      // action 是否显示\n      if (key in record && !record[key]) {\n        return\n      }\n      if (entries.length == 0) {\n        // 自定义 action 不带任何参数\n        return <a key={key} onClick={() => {\n          doAction(text, {\n            entityName,\n            actionName: key,\n            id: record.id\n          });\n        }}>{text}</a>\n      } else {\n        //  自定义action 带参数，弹出 form 由用户输入\n        let actionFormArgs = entries.reduce((a, [k, v]) => {a.push(v); return a;}, [])\n        // console.log(actionFormArgs)\n        return <WriteForm key={key} name={text} columns={action.argColumnsMap.args} onFinish={(postdata) => {\n          doAction(text, {\n            entityName,\n            actionName: key,\n            id: record.id,\n            args: {args: postdata}\n          })\n        }\n        } triggerCompoent={<a href=\"#!\"> {text} </a>} />\n\n      }\n    }\n  }\n\n  const doAction = async (text, params) => {\n\n    let res = await network.actionAsync(params, () => {\n      message.success(`${text} 成功`);\n      actionRef.current.reload();\n    })\n    // if (res.data.code === 0) {\n    //   if (res.data) {\n    //     message.success(`${text} 成功`);\n    //     actionRef.current.reload();\n    //   }\n    // } else {\n    //   message.error(`${text}  失败`);\n    // }\n  }\n  // 用来操作 ProTable\n  // https://procomponents.ant.design/components/table/#actionref-%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91\n  const actionRef = useRef();\n\n\n  return (columns && <ProTable\n    key={entityName}\n    scroll={{x: columns.length * 200}}\n    columns={columns}\n    actionRef={actionRef}\n    cardBordered\n    request={searchAsyncWrapper}\n    editable={{type: 'multiple', }}\n    columnsState={{\n      persistenceKey: 'Dirt',\n      persistenceType: 'localStorage',\n      onChange(value) {},\n    }}\n    rowKey=\"id\"\n    search={{labelWidth: 'auto', }}\n    options={{setting: {listsHeight: 400, }, }}\n    form={{\n      // 由于配置了 transform，提交的参与与定义的不同这里需要转化一下\n      // 这个地方会改变 url，可以在一定程度上通过 url 保持 form 的状态\n      syncToUrl: (values, type) => {return false;},\n    }\n    }\n    pagination={\n      {\n        pageSize: 10,\n        onChange: (page) => console.log(page),\n      }\n    }\n    dateFormatter=\"string\"\n    headerTitle=\"\"\n    toolBarRender={() => [generateCreateForm()]}\n\n    // 自定义选择项参考: https://ant.design/components/table-cn/#components-table-demo-row-selection-custom\n    rowSelection={{...rowSelection}}\n\n    tableAlertRender={({selectedRowKeys, selectedRows, onCleanSelected}) => (\n      <Space size={24} >\n\n        <span>\n          已选 {selectedRowKeys.length} 项\n          [{\n            selectedRowKeys.map(id => customRender.readForm(id, entityName, id))\n          }]\n          <a href=\"#!\" style={{marginInlineStart: 16}} onClick={() => network.deleteByIdsAsync(\n            {\n              entityName,\n              ids: selectedRowKeys\n            }, () => {\n              onCleanSelected()\n              actionRef.current.reload()\n            }\n          )}>远程删除</a>\n          <a href=\"#!\" style={{marginInlineStart: 16}} onClick={onCleanSelected}>导出数据</a>\n          {onSelected && <a href=\"#!\" style={{marginInlineStart: 16}} onClick={e => onSelected(selectedRows)}>选择</a>}\n        </span>\n      </ Space>\n    )}\n  />\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport {CarryOutOutlined, FormOutlined} from '@ant-design/icons';\nimport {Switch, Tree} from 'antd';\nimport Table from './dirtTable';\nimport network from '../logic/network';\nconst treeData = [\n  {\n    title: 'parent 1',\n    key: '0-0',\n    icon: <CarryOutOutlined />,\n    children: [\n      {\n        title: 'parent 1-0',\n        key: '0-0-0',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-0-0-0',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: (\n              <>\n                <div>one line title</div>\n              </>\n            ),\n            key: '0-0-0-1',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: 'leaf',\n            key: '0-0-0-2',\n            icon: <CarryOutOutlined />,\n          },\n        ],\n      },\n      {\n        title: 'parent 1-1',\n        key: '0-0-1',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-0-1-0',\n            icon: <CarryOutOutlined />,\n          },\n        ],\n      },\n      {\n        title: 'parent 1-2',\n        key: '0-0-2',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-0-2-0',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: 'leaf',\n            key: '0-0-2-1',\n            icon: <CarryOutOutlined />,\n            switcherIcon: <FormOutlined />,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'parent 2',\n    key: '0-1',\n    icon: <CarryOutOutlined />,\n    children: [\n      {\n        title: 'parent 2-0',\n        key: '0-1-0',\n        icon: <CarryOutOutlined />,\n        children: [\n          {\n            title: 'leaf',\n            key: '0-1-0-0',\n            icon: <CarryOutOutlined />,\n          },\n          {\n            title: 'leaf',\n            key: '0-1-0-1',\n            icon: <CarryOutOutlined />,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst App = (props) => {\n  const {entityName} = props;\n  const [showLine, setShowLine] = useState(true);\n  const [showIcon, setShowIcon] = useState(false);\n  const [showLeafIcon, setShowLeafIcon] = useState(true);\n  const [data, setData] = useState(treeData);\n\n  const dataAdapter = (ds) => {\n    var obj = JSON.parse(JSON.stringify(ds)\n      .replaceAll(\"\\\"name\\\":\", \"\\\"title\\\":\")\n      .replaceAll(\"\\\"subMenus\\\":\", \"\\\"children\\\":\")\n      .replaceAll(\"\\\"id\\\":\", \"\\\"key\\\":\")\n\n    );\n    console.log(obj)\n    return obj;\n  }\n\n  useEffect(() => {\n    (async () => {\n      const data = await network.getDataAsync('com.zk.mall.entity.Menu', 1)\n      setData(dataAdapter(data).children)\n    }\n    )()\n  }, [])\n  const onSelect = (selectedKeys, info) => {\n    console.log('selected', selectedKeys, info);\n  };\n\n\n\n  return (\n    <>\n      <div style={{display: 'flex'}}>\n        <div style={{width: '20%'}}>\n          <Tree\n            showLine={showLine}\n            showIcon={showIcon}\n            defaultExpandedKeys={['0-0-0']}\n            onSelect={onSelect}\n            treeData={data}\n          />\n        </div>\n        <div style={{width: '79%', height: '100vh'}}>\n          < Table entityName={entityName} />\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default App;\n","import React, {useState, useEffect,useSearchParams} from \"react\";\nimport 'antd/dist/antd.css';\nimport axios from 'axios'\nimport Table from './components/dirtTable'\nimport qs from 'qs'\nimport Tree from './components/tree'\n\nfunction App() {\n  let [tables, setTables] = useState({})\n  let entityName =qs.parse(window.location.search, { ignoreQueryPrefix: true }).entityName\n  entityName=entityName \n\n  const [title, setTitle] = useState(null);\n  const [viewType, setViewType] = useState('Table');\n  \n  \n  \n  \n  useEffect(() => {\n    (async () => {\n      let data = await axios.get(`getTableMaps`)\n      setTables(data.data);\n      if(entityName!=null)\n        setTitle(data.data[entityName].text)\n    })()\n  }, [])\n  return (\n     <div >\n      {\n        Object.keys(tables).length > 0 && Object.entries(tables).map(([t, v]) => {\n          return <a key={t} href=\"#!\" onClick={e => {\n            // window.location.entityName = v.className;\n          window.location.search = \"entityName=\"+v.className;\n\n          }}>{v.text} |</a>\n        })\n      }\n      <h1>{title}</h1>\n      <hr style={{marginBottom: '25px'}} />\n      {viewType === 'Table' && (< Table entityName={entityName} />)}\n      {viewType === 'Tree' && (< Table entityName={entityName} />)}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}